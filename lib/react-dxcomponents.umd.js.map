{"version":3,"file":"react-dxcomponents.umd.js","sources":["../src/javascript/i18n/getI18n.js","../src/javascript/reduxStore.js","../src/javascript/theme/theme.js","../src/javascript/theme/ThemeTester.jsx","../src/javascript/router/createOutletHistory.js","../src/javascript/router/OutletRouter.jsx","../src/javascript/router/RouterExample.jsx","../src/javascript/notification/NotificationProvider.jsx","../src/javascript/context/DxContextProvider.jsx","../src/javascript/context/withDxContext.jsx","../src/javascript/dynamicList/SimpleListView.jsx","../src/javascript/dynamicList/DynamicComponentsList.jsx","../src/javascript/i18n/LanguageSwitcher.jsx","../src/javascript/layout/SettingsLayout.jsx","../src/javascript/layout/SearchBar.jsx","../src/javascript/nodesTable/withNodesFromPath.jsx","../src/javascript/mutations/Mutation.jsx","../src/javascript/nodesTable/NodesTableViewMaterial.jsx","../src/javascript/nodesTable/withPathFromSelection.jsx","../src/javascript/notification/withNotifications.jsx","../src/javascript/picker/PickerViewMaterial.jsx","../src/javascript/picker/PickerViewMaterialMultiple.jsx","../src/javascript/picker/Picker.jsx"],"sourcesContent":["import i18n from 'i18next';\r\nimport XHR from 'i18next-xhr-backend';\r\n// import LanguageDetector from 'i18next-browser-languagedetector/';\r\nimport { reactI18nextModule } from 'react-i18next';\r\n\r\nfunction getI18n(options) {\r\n    options = options || {};\r\n    i18n\r\n        .use(XHR)\r\n        // .use(LanguageDetector)\r\n        // .use(reactI18nextModule) // if not using I18nextProvider\r\n        .init({\r\n            lng: (options.currentLanguage ? options.currentLanguage : undefined),\r\n            fallbackLng: 'en',\r\n            debug: true,\r\n\r\n            interpolation: {\r\n                escapeValue: false, // not needed for react!!\r\n            },\r\n\r\n            // react i18next special options (optional)\r\n            react: {\r\n                wait: false,\r\n                bindI18n: 'languageChanged loaded',\r\n                bindStore: 'added removed',\r\n                nsMode: 'default'\r\n            },\r\n\r\n            backend: {\r\n                loadPath: (options.contextPath ? options.contextPath : '') + '/modules/{{ns}}/javascript/locales/{{lng}}.json',\r\n            }\r\n        });\r\n    return i18n;\r\n}\r\n\r\n\r\nexport { getI18n };","import {createStore} from 'redux'\r\nimport * as _ from \"lodash\";\r\n\r\nconst reducers = {};\r\n\r\nconst store = function () {\r\n    let debugTool;\r\n    if (typeof window !== 'undefined') {\r\n        debugTool = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\r\n            name: \"DX Redux\",\r\n            instanceId: \"dx\"\r\n        });\r\n    }\r\n\r\n    return createStore((state = {}, action) => _.mapValues(reducers, (value, key) => value(state[key], action)), debugTool);\r\n}();\r\n\r\nconst resetStateReducer = function(state, action) {\r\n    if (action.type === 'RESET_STATE') {\r\n        return undefined;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport {reducers, store, resetStateReducer};\r\n","import {createMuiTheme} from 'material-ui';\r\nimport {blueGrey, lightBlue, red, grey, purple, green, deepOrange} from 'material-ui/colors/index'\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        background: {\r\n            global: grey[200],\r\n        },\r\n        contrastThreshold: 3.1,\r\n        tonalOffset: 0.2,\r\n        primary: {\r\n            main: blueGrey[600],\r\n        },\r\n        secondary: {\r\n            main: lightBlue[600],\r\n        },\r\n        error: {\r\n            main: red[400],\r\n        },\r\n        publish: {\r\n            main: deepOrange[500],\r\n        },\r\n        enabled: {\r\n            main: green[400],\r\n        },\r\n        delete: {\r\n            main: red[600],\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiButton: {\r\n            root: {\r\n                color: \"inherit\",\r\n            }\r\n        },\r\n        MuiTableCell: {\r\n            body: {\r\n                color: \"inherit\",\r\n            }\r\n        },\r\n        MuiIconButton: {\r\n            root: {\r\n                color: \"inherit\",\r\n            }\r\n        },\r\n        MuiCheckbox: {\r\n            default: {\r\n                color: \"inherit\",\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nlet darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        background: {\r\n            global: grey[900]\r\n        },\r\n        contrastThreshold: 3.0,\r\n        tonalOffset: 0.2,\r\n        primary: {\r\n            main: purple[500]\r\n        },\r\n        secondary: {\r\n            main: green[400]\r\n        },\r\n        error: {\r\n            main: red[200]\r\n        },\r\n        publish: {\r\n            main: deepOrange[500],\r\n        },\r\n        enabled: {\r\n            main: green[400],\r\n        },\r\n        delete: {\r\n            main: red[600],\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiButton: {\r\n            root: {\r\n                color: \"inherit\",\r\n            }\r\n        },\r\n        MuiTableCell: {\r\n            body: {\r\n                color: \"inherit\",\r\n            }\r\n        },\r\n        MuiIconButton: {\r\n            root: {\r\n                color: \"inherit\",\r\n            }\r\n        },\r\n        MuiCheckbox: {\r\n            default: {\r\n                color: \"inherit\",\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport {theme, darkTheme}\r\n","import React from 'react';\r\nimport {withDxContext} from \"../context\";\r\nimport {Switch} from 'material-ui'\r\nimport {theme, darkTheme} from \"./theme\";\r\n\r\nclass ThemeTester extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.switch = this.switch.bind(this);\r\n\r\n        this.themes = [theme, darkTheme];\r\n        this.state = {\r\n            checked:false\r\n        };\r\n    }\r\n\r\n    switch() {\r\n        this.setState((previous) => {\r\n            this.props.dxContext.setTheme(previous.checked ? theme : darkTheme);\r\n            return {\r\n                checked: !previous.checked\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Switch color=\"default\" onChange={this.switch} checked={this.state.checked}/>\r\n    }\r\n\r\n}\r\n\r\n\r\nThemeTester = withDxContext()(ThemeTester);\r\n\r\nexport {ThemeTester}","import * as _ from \"lodash\";\r\n\r\nfunction createOutletHistory(baseHistory, outletName) {\r\n\r\n    const getPath = (path) => {\r\n        let parts = [];\r\n        let base = baseHistory.location.pathname;\r\n        let newPath = outletName + ':' + path;\r\n        if (base.indexOf('(') > -1) {\r\n            base = base.substr(base.indexOf('(')+1);\r\n            base = base.substr(0,base.indexOf(')'));\r\n            parts = base.split('//')\r\n            parts = _.map(parts, (p)=> (p.startsWith(outletName + ':') ? newPath : p));\r\n        }\r\n        if (parts.indexOf(newPath) === -1) {\r\n            parts.push(newPath);\r\n        }\r\n        return '/('+ _.join(parts,'//') + ')';\r\n    };\r\n\r\n    const getState = function (state) {\r\n        let newState;\r\n        if (state) {\r\n            newState = baseHistory.location.state ? baseHistory.location.state : {};\r\n            newState['router_' + outletName] = state;\r\n        } else if (baseHistory.location.state) {\r\n            newState = baseHistory.location.state;\r\n            delete newState['router_' + outletName]\r\n        }\r\n        return newState;\r\n    };\r\n\r\n    const extractPath = function(base) {\r\n        if (base.indexOf('(') > -1) {\r\n            base = base.substr(base.indexOf('(') + 1);\r\n            base = base.substr(0, base.indexOf(')'));\r\n            let parts = base.split('//')\r\n            let s = outletName + ':';\r\n            let part = _.find(parts, (p)=> (p.startsWith(s)));\r\n            if (part) {\r\n                return part.substr(s.length)\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n\r\n    let initialLocation = _.clone(baseHistory.location);\r\n    initialLocation.pathname = extractPath(initialLocation.pathname);\r\n\r\n    let listeners = [];\r\n\r\n    const history = {\r\n        length: baseHistory.length,\r\n        action: baseHistory.action,\r\n        location: initialLocation,\r\n        createHref: (location) => {\r\n            return baseHistory.createHref({pathname:getPath(location.pathname)});\r\n        },\r\n        push: (path, state) => {\r\n            return baseHistory.push(getPath(path),getState(state));\r\n        },\r\n        replace: (path, state) => {\r\n            baseHistory.replace(getPath(path),getState(state));\r\n        },\r\n        go: (n) => {\r\n            baseHistory.go(n)\r\n        },\r\n        goBack: () => {\r\n            baseHistory.goBack()\r\n        },\r\n        goForward: () => {\r\n            baseHistory.goForward()\r\n        },\r\n        block:(prompt) => {\r\n            return baseHistory.block(prompt)\r\n        },\r\n        listen: (listener) => {\r\n            listeners.push(listener);\r\n            return () => {\r\n                _.pull(listeners, listener);\r\n            }\r\n        },\r\n        dispose: () => {\r\n            unlisten();\r\n        }\r\n    };\r\n\r\n    const unlisten = baseHistory.listen( (event) => {\r\n        let path = extractPath(event.pathname);\r\n        let state;\r\n        if (event.state && event.state['router_' + outletName]) {\r\n            state = event.state['router_' + outletName];\r\n        }\r\n        if (history.location.pathname !== path || history.location.state !== state) {\r\n            Object.assign(history.location, event);\r\n            history.location.pathname = path;\r\n            history.location.state = state;\r\n            _.each(listeners, (listener) => listener.call(this,history.location))\r\n        }\r\n    });\r\n\r\n    // unlisten when not used anymore !\r\n\r\n    return history\r\n}\r\n\r\nexport { createOutletHistory }","import React from 'react';\r\n\r\nimport {createHashHistory} from \"history\";\r\nimport {createOutletHistory} from \"./createOutletHistory\"\r\nimport {Router} from 'react-router'\r\n\r\nclass OutletRouter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let baseHistory = createHashHistory();\r\n        this.outletHistory = createOutletHistory(baseHistory, props.outlet);\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.outletHistory.dispose();\r\n    }\r\n\r\n    render() {\r\n        return (<Router history={this.outletHistory}>{this.props.children}</Router>)\r\n    }\r\n}\r\n\r\nexport { OutletRouter };","import React from 'react';\r\nimport {OutletRouter as Router} from './OutletRouter'\r\nimport {Link, Route} from 'react-router-dom'\r\nimport {Paper, Typography} from 'material-ui'\r\nclass RouterExample extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let Test1 = props => (\r\n            <Paper elevation={4}>\r\n                <Typography type=\"headline\" component=\"h3\">\r\n                    Page 1\r\n                </Typography>\r\n                <Typography component=\"p\">\r\n                    Param = {props.match.params.value}\r\n                </Typography>\r\n            </Paper>\r\n        );\r\n        let Test2 = props => (\r\n            <Paper elevation={4}>\r\n                <Typography type=\"headline\" component=\"h3\">\r\n                    Page 2\r\n                </Typography>\r\n            </Paper>\r\n\r\n        );\r\n        let Test3 = props => (\r\n            <Paper elevation={4}>\r\n                <Typography type=\"headline\" component=\"h3\">\r\n                    Page 3\r\n                </Typography>\r\n            </Paper>\r\n        );\r\n\r\n        return (<Router outlet={this.props.id}>\r\n            <div>\r\n                <Link to={'/test1/value1'}>test1/value1</Link>\r\n                <Link to={'/test1/value2'}>Test1/value2</Link>\r\n                <Link to={'/test2'}>test2</Link>\r\n                <Link to={'/test3'}>test3</Link>\r\n\r\n                <Route path={'/test1/:value'} component={Test1}/>\r\n                <Route path={'/test2'} component={Test2}/>\r\n                <Route path={'/test3'} component={Test3}/>\r\n            </div>\r\n        </Router>);\r\n    }\r\n\r\n}\r\n\r\nexport {RouterExample}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Component } from \"react\";\r\nimport {Snackbar} from \"material-ui\";\r\n\r\nclass NotificationProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let {notificationContext} = this.props;\r\n\r\n        this.state = {\r\n            notification: {\r\n                message: \"\",\r\n                open: false\r\n            }\r\n        };\r\n\r\n        notificationContext.notify = (message) => {\r\n            this.setState({\r\n                notification: {\r\n                    message: message,\r\n                    open:true\r\n                }\r\n            });\r\n        };\r\n\r\n        notificationContext.closeNotification = () => {\r\n            this.setState({\r\n                notification: {\r\n                    message: '',\r\n                    open: false\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    getChildContext() {\r\n        return {\r\n            notificationContext: this.props.notificationContext\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // TODO make it configurable\r\n        return <div>\r\n            {this.props.children}\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                autoHideDuration={5000}\r\n                onClose={this.props.notificationContext.closeNotification}\r\n                open={this.state.notification.open}\r\n                SnackbarContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.notification.message}</span>}\r\n            />\r\n        </div>;\r\n    }\r\n}\r\n\r\nNotificationProvider.propTypes = {\r\n    notificationContext: PropTypes.object.isRequired\r\n};\r\n\r\nNotificationProvider.childContextTypes = {\r\n    notificationContext: PropTypes.object.isRequired\r\n};\r\n\r\nexport {NotificationProvider}","import React from 'react';\r\nimport {MuiThemeProvider} from 'material-ui';\r\nimport {createGenerateClassName} from 'material-ui/styles/index';\r\nimport {getI18n} from \"../i18n/getI18n\";\r\nimport {store} from '../reduxStore';\r\nimport {theme} from '../theme'\r\nimport {client} from '@jahia/apollo-dx';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport {Provider} from 'react-redux'\r\nimport {I18nextProvider} from 'react-i18next'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {OutletRouter} from '../router'\r\nimport PropTypes from 'prop-types';\r\nimport { SheetsRegistry, JssProvider } from 'react-jss';\r\nimport {NotificationProvider} from \"../notification/NotificationProvider\";\r\n\r\nimport * as _ from \"lodash\";\r\n\r\nclass DxContextProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let {dxContext, children, i18n, apollo, redux, mui, router, apolloClient} = this.props;\r\n        let state = {};\r\n        if (mui) {\r\n            if (typeof mui === 'object') {\r\n                state.currentTheme = mui;\r\n            } else {\r\n                state.currentTheme = theme;\r\n            }\r\n            dxContext.setTheme = (theme) => {\r\n                // theTheme = _.merge({}, theme, this.state.theme);\r\n                this.setState({\r\n                    currentTheme: theme\r\n                });\r\n            };\r\n        }\r\n\r\n        if (dxContext.apolloClient) {\r\n            state.apolloClient = dxContext.apolloClient;\r\n        } else if (apolloClient) {\r\n            state.apolloClient = apolloClient;\r\n        } else if (apollo) {\r\n            let options = {contextPath:dxContext.contextPath};\r\n            if (typeof apollo === 'object') {\r\n                Object.assign(options, apollo)\r\n            }\r\n            state.apolloClient = client(options);\r\n        }\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    getChildContext() {\r\n        return {dxContext: this.props.dxContext};\r\n    }\r\n\r\n    render() {\r\n        let {dxContext, children, i18n, apollo, redux, mui, router} = this.props;\r\n        let {currentTheme, apolloClient} = this.state;\r\n\r\n        let Component = React.Children.only(children);\r\n        if (i18n) {\r\n            let options = {currentLanguage:dxContext.uilang, contextPath:dxContext.contextPath};\r\n            if (typeof i18n === 'object') {\r\n                Object.assign(options, i18n)\r\n            }\r\n            Component = React.createElement(I18nextProvider, {i18n:getI18n(options)}, Component);\r\n        }\r\n        if (router) {\r\n            let router = HashRouter;\r\n            let options = {};\r\n            if (typeof router === 'object') {\r\n                if (router.type === 'outlet') {\r\n                    router = OutletRouter;\r\n                    options.outlet = router.outlet;\r\n                }\r\n            }\r\n            Component = React.createElement(HashRouter, options, Component);\r\n        }\r\n        if (apolloClient) {\r\n            Component = React.createElement(ApolloProvider, {client:apolloClient}, Component);\r\n        }\r\n        if (redux) {\r\n            Component = React.createElement(Provider, {store:store}, Component);\r\n        }\r\n\r\n        if (currentTheme) {\r\n            let generateClassName = dxContext.generateClassName ? dxContext.generateClassName : createGenerateClassName();\r\n            let sheetsRegistry = dxContext.sheetRegistry ? dxContext.sheetRegistry : new SheetsRegistry();\r\n            Component = React.createElement(JssProvider, {registry: sheetsRegistry,  generateClassName:generateClassName}, React.createElement(MuiThemeProvider, {theme: currentTheme, sheetsManager:new Map()}, Component));\r\n            // } else {\r\n            //     Component = React.createElement(MuiThemeProvider, {theme: currentTheme}, Component);\r\n            // }\r\n        }\r\n\r\n        // add notification\r\n        Component = React.createElement(NotificationProvider, {notificationContext:{}}, Component);\r\n\r\n        return Component;\r\n    }\r\n}\r\n\r\nDxContextProvider.childContextTypes = {\r\n    dxContext: PropTypes.object\r\n};\r\n\r\nexport {DxContextProvider}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction withDxContext() {\r\n    return (WrappedComponent) => {\r\n        let Component = class extends React.Component {\r\n            render() {\r\n                return (<WrappedComponent dxContext={this.context.dxContext} {...this.props} />)\r\n            }\r\n        }\r\n\r\n        Component.contextTypes = {\r\n            dxContext: PropTypes.object\r\n        };\r\n\r\n        return Component\r\n    }\r\n}\r\n\r\nexport { withDxContext }","import React from 'react';\r\n\r\nclass SimpleListView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reactElements: []\r\n        };\r\n    }\r\n\r\n    // todo should move this code dynamicList itself\r\n    componentDidMount() {\r\n        if (this.props.components && !this.done) {\r\n            this.props.components.then((reactElements) => {\r\n                this.done = true;\r\n                this.setState({reactElements: reactElements});\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.componentDidMount();\r\n    }\r\n\r\n    render() {\r\n        return this.done ? (<div>{this.state.reactElements}</div>) : (<div/>);\r\n    }\r\n}\r\n\r\nexport {SimpleListView}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {SimpleListView} from './SimpleListView'\r\nimport {graphql} from 'react-apollo';\r\nimport gql from \"graphql-tag\";\r\nimport * as _ from \"lodash\";\r\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DynamicComponentsList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.componentCache = [];\r\n    }\r\n\r\n    mapResultsToProps({data, ownProps}) {\r\n        let components = [];\r\n\r\n        let jcr = data.jcr;\r\n        let safeEval = eval;\r\n        if (jcr && jcr.nodesByQuery) {\r\n            components = _.map(_.flatMap(jcr.nodesByQuery.nodes, \"children.nodes\"),(n)=> safeEval(\"(\" + n.renderedContent.output + \")\"));\r\n        }\r\n\r\n        let imports = [];\r\n        _.each(components, c => {\r\n            imports = imports.concat(c.getImports())\r\n        });\r\n        let promise;\r\n        if (imports.length > 0) {\r\n            promise = Promise.all(_.map(imports, (imp) => SystemJS.import(imp))).then(m => {\r\n                let reactElements = _.map(components, (c) => {\r\n                    let s = c.getImports().length;\r\n                    let r = c.createElement(React, ReactDOM, ...m);\r\n                    m.splice(s);\r\n                    return r;\r\n                });\r\n                return reactElements;\r\n            });\r\n        }\r\n\r\n        return {\r\n            ...ownProps,\r\n            components: promise,\r\n        };\r\n    }\r\n\r\n    mapPropsToOptions(props) {\r\n        return {\r\n            variables : {\r\n                query: \"select * from [reactnt:componentsFolder] where [react:id]='\" + props.id + \"'\"\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let renderComponent = this.props.renderComponent;\r\n\r\n        let cacheMatch = _.find(this.componentCache, (f) => f.renderComponent === renderComponent);\r\n        let Component;\r\n        if (cacheMatch) {\r\n            Component = cacheMatch.dataComponent;\r\n        } else {\r\n            let query = gql`\r\n                query ComponentsQuery($query:String!) {\r\n                    jcr {\r\n                        nodesByQuery(query:$query) {\r\n                            nodes {\r\n                                name\r\n                                path\r\n                                primaryNodeType {\r\n                                    name\r\n                                }\r\n                                children {\r\n                                    nodes {\r\n                                        name\r\n                                        path\r\n                                        primaryNodeType {\r\n                                            name\r\n                                        }\r\n                                        renderedContent(templateType:\"js\", view:\"react\") {\r\n                                            output\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }`;\r\n\r\n            Component = graphql(query, {\r\n                props: this.mapResultsToProps,\r\n                options: this.mapPropsToOptions\r\n            })(renderComponent || SimpleListView);\r\n\r\n            this.componentCache.push({renderComponent: renderComponent, dataComponent: Component});\r\n        }\r\n\r\n        return (<Component {...this.props} />);\r\n    }\r\n}\r\n\r\nDynamicComponentsList.propTypes = {\r\n    /**\r\n     * Id of the \"componentsFolder\" to look for\r\n     */\r\n    id: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * Component to use to do the rendering\r\n     */\r\n    renderComponent: PropTypes.element\r\n}\r\n\r\nexport {DynamicComponentsList};\r\n","import React from 'react';\r\nimport {Button, Menu, MenuItem} from 'material-ui';\r\nimport {translate} from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LanguageSwitcher extends React.Component {\r\n\r\n    constructor(props,context) {\r\n        super(props,context);\r\n        this.state = {\r\n            anchorEl: null,\r\n        };\r\n    }\r\n\r\n    handleClick(event) {\r\n        this.setState({anchorEl: event.target});\r\n    }\r\n\r\n    handleClose(lang) {\r\n        this.setState({anchorEl: null});\r\n        if (lang) {\r\n            this.context.i18n.changeLanguage(lang);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let availableLocales = ['fr', 'en'];\r\n\r\n        return (<div>\r\n            <Button onClick={this.handleClick.bind(this)}\r\n            >{this.props.t('label.languages')}</Button>\r\n            <Menu open={Boolean(this.state.anchorEl)} onClose={this.handleClose.bind(this, null)}\r\n                  anchorEl={this.state.anchorEl}>\r\n                {availableLocales.map((locale) => (\r\n                    <MenuItem onClick={this.handleClose.bind(this, locale)} key={locale}\r\n                              value={locale}>{locale}</MenuItem>))}\r\n            </Menu>\r\n        </div>);\r\n    }\r\n}\r\n\r\nLanguageSwitcher.contextTypes = {\r\n    i18n: PropTypes.object\r\n};\r\n\r\nLanguageSwitcher = translate('react-dxcomponents')(LanguageSwitcher);\r\n\r\n\r\nexport {LanguageSwitcher}\r\n","import React from 'react';\r\nimport {AppBar, Toolbar, Typography, withStyles} from 'material-ui';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.global\r\n    },\r\n    main: {\r\n        minHeight: 'calc(100% - 96px)',\r\n        marginTop: 64,\r\n        padding: 1\r\n    },\r\n    footer: {\r\n        fontSize: '14px',\r\n        fontFamily: theme.typography.fontFamily,\r\n        fontWeight: 300,\r\n        padding: \"8px\",\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary\r\n    },\r\n    appBar: {\r\n        transition: \"all 200ms ease-in-out\"\r\n    }\r\n});\r\n\r\n\r\nclass SettingsLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let { classes, appBar, children, footer, appBarStyle } = this.props;\r\n        return (\r\n            <section className={classes.root} >\r\n                <AppBar position=\"fixed\" classes={{root:classes.appBar}} style={appBarStyle}>\r\n                    {appBar}\r\n                </AppBar>\r\n                <section className={classes.main}>\r\n                    {children}\r\n                </section>\r\n                <footer className={classes.footer}>\r\n                    {footer}\r\n                </footer>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nSettingsLayout.propTypes = {\r\n    appBar: PropTypes.element,\r\n    footer: PropTypes.string\r\n};\r\n\r\nSettingsLayout = withStyles(styles)(SettingsLayout);\r\n\r\nexport {SettingsLayout};","import React from 'react';\r\nimport {Input, InputAdornment, withStyles} from 'material-ui';\r\nimport {Search} from 'material-ui-icons';\r\nimport {translate} from 'react-i18next';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: '0',\r\n        color : 'inherit',\r\n        backgroundColor : theme.palette.primary.light,\r\n        width: '720px',\r\n        height: '44px',\r\n        lineHeight: '40px',\r\n        borderRadius: '3px',\r\n        fontWeight: '200'\r\n    },\r\n    rootFocus: {\r\n        margin: '0',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor : '#fff',\r\n        width: '720px',\r\n        height: '44px',\r\n        lineHeight: '40px',\r\n        borderRadius: '3px',\r\n        fontWeight: '100',\r\n        boxShadow: \"0 1px 8px 0 rgba(0, 0, 0, 0.4)\",\r\n        // '& $input': {\r\n        //     width: '300px'\r\n        // }\r\n    },\r\n    input: {\r\n        transitionProperty: 'width',\r\n        transitionDuration: '300ms',\r\n        transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n        transitionDelay: '0ms',\r\n\r\n    },\r\n    searchIcon: {\r\n        'marginTop': 'auto',\r\n        'marginBottom': 'auto',\r\n        'paddingLeft': '14px',\r\n        'opacity': '0.87'\r\n    }\r\n});\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.state = {\r\n            focus: false\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Let the handler deal with the change only when the user has paused changing the filter text for a second.\r\n        event.persist();\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n        this.timeout = setTimeout(function() {\r\n            this.props.onChangeFilter(event.target.value)\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    onFocus() {\r\n        this.setState({\r\n            focus: true\r\n        });\r\n        this.props.onFocus();\r\n    }\r\n\r\n    onBlur() {\r\n        this.setState({\r\n            focus: false\r\n        });\r\n        this.props.onBlur();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes,t, placeholderLabel } = this.props;\r\n\r\n        return (\r\n            <Input classes={{root: (this.state.focus ? classes.rootFocus : classes.root), input: classes.input}}\r\n                   onChange={this.handleChange}\r\n                   onBlur={this.onBlur}\r\n                   onFocus={this.onFocus}\r\n                   disableUnderline={true}\r\n                   type=\"text\"\r\n                   placeholder={placeholderLabel || t('label.searchPlaceholder')}\r\n                   startAdornment={<InputAdornment classes={{root: classes.searchIcon}} position=\"start\"><Search/></InputAdornment>}\r\n                   style={this.props.style}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nSearchBar = withStyles(styles)(translate('react-dxcomponents')(SearchBar));\r\n\r\nexport {SearchBar};","import React from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport gql from \"graphql-tag\";\r\nimport * as _ from \"lodash\";\r\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\r\n\r\nfunction withNodesFromPath(fragments) {\r\n    return (ViewComponent) => {\r\n        // GraphQL maps\r\n        let mapResultsToProps = ({data, ownProps}) => {\r\n            let nodes = [];\r\n\r\n            let jcr = data.jcr;\r\n\r\n            if (jcr) {\r\n                if (jcr.node) {\r\n                    nodes = jcr.node.children.nodes;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...ownProps,\r\n                nodes: nodes,\r\n            };\r\n        };\r\n\r\n        let mapPropsToOptions = (props) => {\r\n            let vars = {\r\n                path: props.path,\r\n                types: props.types,\r\n            };\r\n            if (props.queryVariables) {\r\n                _.assign(vars, props.queryVariables);\r\n            }\r\n\r\n            return {\r\n                variables: vars,\r\n                skip: !props.path\r\n            }\r\n        };\r\n\r\n        let query = gql`\r\n            query NodesQuery($path:String!, $types:[String]!) {\r\n                jcr {\r\n                    node:nodeByPath(path: $path) {\r\n                        path\r\n                        uuid\r\n                        name\r\n                        children(typesFilter:{types:$types}) {\r\n                            nodes {\r\n                                path\r\n                                uuid\r\n                                name\r\n                                ... node\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }`;\r\n\r\n        replaceFragmentsInDocument(query, fragments);\r\n\r\n        return graphql(query, {\r\n            props: mapResultsToProps,\r\n            options: mapPropsToOptions\r\n        })(ViewComponent);\r\n    }\r\n}\r\n\r\nexport {withNodesFromPath};\r\n","import React, {Component} from 'react';\r\nimport {ApolloProvider, graphql} from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport {withNodesFromPath} from \"../nodesTable/withNodesFromPath\";\r\nimport {Button, Table, TableBody, TableCell, TableHead, TableRow} from 'material-ui';\r\n\r\n\r\nclass MutationExampleView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let RenderComponent = (props) => (<Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Value</TableCell>\r\n                        <TableCell>Update</TableCell>\r\n                        <TableCell>Delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.nodes ? props.nodes.map(node =>\r\n                        <TableRow key={node.uuid}>\r\n                            <TableCell>{node.name}</TableCell>\r\n                            <TableCell>{node.myprop.value}</TableCell>\r\n                            <TableCell><Button onClick={() => this.props.setPropertyMutation({\r\n                                variables: {\r\n                                    path: node.path,\r\n                                    value: (\"test:\" + new Date())\r\n                                },\r\n                                refetchQueries: [\"NodesQuery\"]\r\n                                // update: update\r\n                            })}>Update</Button></TableCell>\r\n                            <TableCell><Button onClick={() => this.props.removeNodeMutation({\r\n                                variables: {\r\n                                    path: node.path,\r\n                                },\r\n                                refetchQueries: [\"NodesQuery\"]\r\n                            })}>Delete</Button></TableCell>\r\n                        </TableRow>\r\n                    ) : []}\r\n                </TableBody>\r\n            </Table>\r\n        );\r\n\r\n        this.Component = withNodesFromPath([{\r\n            applyFor: \"node\",\r\n            gql: gql`fragment Test on JCRNode {\r\n                myprop:property(name:\"myprop\") {\r\n                    value\r\n                }\r\n            }`\r\n        }])(RenderComponent);\r\n    }\r\n\r\n\r\n    render() {\r\n        let Component = this.Component;\r\n        return (\r\n            <div>\r\n                <Button onClick={() => this.props.addNodeMutation({\r\n                    variables: {\r\n                        name: (\"name-\" + (new Date().getTime())),\r\n                        value: (\"test:\" + new Date())\r\n                    },\r\n                    refetchQueries: [\"NodesQuery\"]\r\n                })}>New</Button>\r\n\r\n                <Component path={\"/\"} types={[\"nt:unstructured\"]}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst setProperty = gql`\r\n    mutation setProperty($value:String,$path:String!) {\r\n        jcr {\r\n            mutateNode(pathOrId:$path) {\r\n                mutateProperty(name:\"myprop\") {\r\n                    setValue(value:$value)\r\n                }\r\n                node {\r\n                    path\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst addNode = gql`\r\n    mutation addNode($value:String, $name:String!) {\r\n        jcr {\r\n            addNode(parentPathOrId:\"/\",name:$name,primaryNodeType:\"nt:unstructured\") {\r\n                mutateProperty(name:\"myprop\") {\r\n                    setValue(value:$value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst removeNode = gql`\r\n    mutation removeNode($path:String!) {\r\n        jcr {\r\n            deleteNode(pathOrId:$path)\r\n        }\r\n    }\r\n`;\r\n\r\nlet MutationExample = graphql(setProperty, {name: 'setPropertyMutation'})(\r\n    graphql(addNode, {name: 'addNodeMutation'})(\r\n        graphql(removeNode, {name: 'removeNodeMutation'})(MutationExampleView)));\r\n\r\nexport {MutationExample};","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableHead, TableRow} from 'material-ui';\r\nimport PropTypes from 'prop-types';\r\n\r\nlet NodesTableViewMaterial = function (props) {\r\n\r\n    let headers = props['headers'] ? props['headers'] : () => (\r\n        <TableRow>\r\n            <TableCell>Name</TableCell>\r\n        </TableRow>);\r\n\r\n    let row = props['row'] ? props['row'] : (node) => (<TableRow key={node.path}>\r\n            <TableCell>{props['textRenderer'] ? props['textRenderer'].call(this, node) : node.name}</TableCell>\r\n        </TableRow>);\r\n\r\n    return (<Table>\r\n                <TableHead>\r\n                    {headers()}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.nodes ? props.nodes.map(row) : []}\r\n                </TableBody>\r\n            </Table>)\r\n};\r\n\r\nNodesTableViewMaterial.propTypes = {\r\n    headers: PropTypes.func,\r\n    row: PropTypes.func,\r\n    textRenderer: PropTypes.func,\r\n    nodes: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport {NodesTableViewMaterial};","import React from 'react';\r\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\r\nimport {connect} from 'react-redux'\r\n\r\nfunction withPathFromSelection(reduxStoreId) {\r\n    return (WrappedComponent) => {\r\n        return connect(\r\n            (state, ownProps) => ({\r\n                ...ownProps,\r\n                path: (state[\"selectedPaths_\" + reduxStoreId] && state[\"selectedPaths_\" + reduxStoreId].length === 1) ? state[\"selectedPaths_\" + reduxStoreId][0] : null,\r\n            }),\r\n            () => ({}))(WrappedComponent);\r\n    }\r\n}\r\n\r\nexport { withPathFromSelection }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction withNotifications() {\r\n    return (WrappedComponent) => {\r\n        let Component = class extends React.Component {\r\n            render() {\r\n                return (<WrappedComponent notificationContext={this.context.notificationContext} {...this.props} />)\r\n            }\r\n        };\r\n\r\n        Component.contextTypes = {\r\n            notificationContext: PropTypes.object\r\n        };\r\n\r\n        return Component\r\n    }\r\n}\r\n\r\nexport { withNotifications }","import React from 'react';\r\nimport {IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, withTheme} from 'material-ui';\r\nimport {ExpandLess, ExpandMore, RadioButtonChecked, RadioButtonUnchecked} from 'material-ui-icons'\r\nimport PropTypes from 'prop-types';\r\n\r\nlet PickerViewMaterial = function (props) {\r\n    return (<List>\r\n        {props.pickerEntries.map((entry) =>\r\n            (<ListItem button\r\n                       onClick={() => entry.selectable ? props.onSelectItem(entry.path, !entry.selected) : props.onOpenItem(entry.path, !entry.open)}\r\n                       key={entry.path}\r\n                >\r\n                    <ListItemIcon style={entry.selectable ? {} : {opacity: 0}}>{entry.selected ? <RadioButtonChecked/> :\r\n                        <RadioButtonUnchecked/>}</ListItemIcon>\r\n                    <ListItemText style={{paddingLeft: entry.depth * props.theme.spacing.unit}} inset\r\n                                  primary={props['textRenderer'] ? props['textRenderer'].call(this, entry) : entry.name} />\r\n                    <ListItemSecondaryAction>\r\n                        {entry.openable && entry.hasChildren ? (\r\n                            <IconButton onClick={() => props.onOpenItem(entry.path, !entry.open)}>{entry.open ?\r\n                                <ExpandLess/> : <ExpandMore/>}</IconButton>) : null}\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            )\r\n        )}\r\n    </List>)\r\n};\r\n\r\nPickerViewMaterial.propTypes = {\r\n    pickerEntries: PropTypes.array.isRequired,\r\n    onSelectItem: PropTypes.func,\r\n    onOpenItem: PropTypes.func,\r\n    textRenderer: PropTypes.func\r\n};\r\n\r\nPickerViewMaterial = withTheme()(PickerViewMaterial);\r\n\r\nexport {PickerViewMaterial};","import React from 'react';\r\nimport {IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, withTheme} from 'material-ui';\r\nimport {ExpandLess, ExpandMore, CheckBoxOutlineBlank, CheckBox} from 'material-ui-icons'\r\nimport PropTypes from 'prop-types';\r\n\r\nlet PickerViewMaterialMultiple = function (props) {\r\n    return (<List>\r\n        {props.pickerEntries.map((entry) =>\r\n            (<ListItem button\r\n                       onClick={() => entry.selectable ? props.onSelectItem(entry.path, !entry.selected, true) : props.onOpenItem(entry.path, !entry.open)}\r\n                       key={entry.path}\r\n                >\r\n                    <ListItemIcon style={entry.selectable ? {} : {opacity: 0}}>{entry.selected ? <CheckBox/> :\r\n                        <CheckBoxOutlineBlank/>}</ListItemIcon>\r\n                    <ListItemText style={{paddingLeft: entry.depth * props.theme.spacing.unit}} inset\r\n                                  primary={props['textRenderer'] ? props['textRenderer'].call(this, entry) : entry.name} />\r\n                    <ListItemSecondaryAction>\r\n                        {entry.openable && entry.hasChildren ? (\r\n                            <IconButton onClick={() => props.onOpenItem(entry.path, !entry.open)}>{entry.open ?\r\n                                <ExpandLess/> : <ExpandMore/>}</IconButton>) : null}\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            )\r\n        )}\r\n    </List>)\r\n};\r\n\r\nPickerViewMaterialMultiple.propTypes = {\r\n    pickerEntries: PropTypes.array.isRequired,\r\n    onSelectItem:  PropTypes.func,\r\n    onOpenItem: PropTypes.func,\r\n    textRenderer: PropTypes.func,\r\n};\r\n\r\nPickerViewMaterialMultiple = withTheme()(PickerViewMaterialMultiple);\r\n\r\nexport { PickerViewMaterialMultiple };","import React from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport gql from \"graphql-tag\";\r\nimport * as _ from \"lodash\";\r\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Picker extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let query = gql`\r\n            query PickerQuery($rootPaths:[String!]!, $selectable:[String]!, $openable:[String]!, $openPaths:[String!]!, $types:[String]!) {\r\n                jcr {\r\n                    rootNodes:nodesByPath(paths: $rootPaths) {\r\n                        path\r\n                        uuid\r\n                        name\r\n                        children(typesFilter:{types:$types}, limit:1) {\r\n                            pageInfo {\r\n                                totalCount\r\n                            }\r\n                        }\r\n                        selectable : isNodeType(type: {types:$selectable})\r\n                        openable : isNodeType(type: {types:$openable})\r\n                        ... node\r\n                    },\r\n                    openNodes:nodesByPath(paths: $openPaths) {\r\n                        path\r\n                        uuid\r\n                        children(typesFilter:{types:$types}) {\r\n                            nodes {\r\n                                path\r\n                                uuid\r\n                                name\r\n                                children(typesFilter:{types:$types}, limit:1) {\r\n                                    pageInfo {\r\n                                        totalCount\r\n                                    }\r\n                                }\r\n                                selectable : isNodeType(type: {types:$selectable})\r\n                                openable : isNodeType(type: {types:$openable})\r\n                                ... node\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }`;\r\n\r\n        let { fragments, ...graphqlComponentProps } = props;\r\n\r\n        replaceFragmentsInDocument(query, fragments);\r\n\r\n        this.graphqlComponentProps = graphqlComponentProps;\r\n\r\n        let state = {};\r\n        let that = this;\r\n        if (!props.openPaths) {\r\n            state.openPaths = props.defaultOpenPaths ? _.clone(props.defaultOpenPaths) : [];\r\n            graphqlComponentProps.onOpenItem = (path,open) => {\r\n                that.setState( (prevState, props) => ({\r\n                    openPaths: open ? [\r\n                        ...prevState.openPaths,\r\n                        path\r\n                    ] : _.filter(prevState.openPaths, (thispath) => thispath !== path)\r\n                }));\r\n                if (props.onOpenItem) {\r\n                    props.onOpenItem(path,open);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!props.selectedPaths) {\r\n            state.selectedPaths = props.defaultSelectedPaths ? _.clone(props.defaultSelectedPaths) :  [];\r\n            graphqlComponentProps.onSelectItem = (path,selected,multiple) => {\r\n                that.setState((prevState, props)=> ({\r\n                    selectedPaths: selected ? [\r\n                        ...(multiple ? prevState.selectedPaths : []),\r\n                            path\r\n                        ] : _.filter(prevState.selectedPaths, (thispath) => thispath !== path)\r\n                }));\r\n                if (props.onSelectItem) {\r\n                    props.onSelectItem(path,select,multiple);\r\n                }\r\n            }\r\n        }\r\n        this.state = state;\r\n\r\n        this.GraphQLComponent = graphql(query, {\r\n            props: this.mapResultsToProps,\r\n            options: this.mapPropsToOptions\r\n        })(this.props.render);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, prevContext) {\r\n        if (this.props.onSelectionChange && !_.isEqual(this.state.selectedPaths,prevState.selectedPaths)) {\r\n            this.props.onSelectionChange(this.state.selectedPaths);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        let { fragments, onOpenItem, onSelectItem, ...graphqlComponentProps } = nextProps;\r\n        _.assign(this.graphqlComponentProps, graphqlComponentProps);\r\n    }\r\n\r\n    mapResultsToProps({data, ownProps}) {\r\n        let selectedPaths = ownProps.selectedPaths;\r\n        let openPaths = ownProps.openPaths ? ownProps.openPaths : [];\r\n\r\n        let pickerEntries = [];\r\n        let nodesById = {};\r\n        let jcr = data.jcr;\r\n\r\n        let addNode = function (node, depth, index) {\r\n            let selected = false;\r\n            if (node.selectable) {\r\n                selected = _.indexOf(selectedPaths, node.path) !== -1\r\n            }\r\n            let pickerNode = {\r\n                name: node.name,\r\n                path: node.path,\r\n                open: node.openable && _.indexOf(openPaths, node.path) !== -1,\r\n                selected: selected,\r\n                openable: node.openable,\r\n                selectable: node.selectable,\r\n                depth: depth,\r\n                prefix: _.repeat(\"&nbsp;\", depth * 3),\r\n                node: node,\r\n                hidden: false,\r\n                hasChildren: node.children.pageInfo.totalCount > 0\r\n            };\r\n            pickerEntries.splice(index, 0, pickerNode);\r\n            nodesById[node.uuid] = pickerNode;\r\n            return pickerNode;\r\n        };\r\n\r\n        if (jcr) {\r\n            if (jcr.rootNodes) {\r\n                _.forEach(jcr.rootNodes, rootNode => {\r\n                    let root = addNode(rootNode, 0, 0);\r\n                    root.hidden = ownProps.hideRoot;\r\n                });\r\n            }\r\n            if (jcr.openNodes) {\r\n                _.sortBy(jcr.openNodes, ['path']).forEach((node) => {\r\n                    let parent = nodesById[node.uuid];\r\n                    if (parent) {\r\n                        let parentIndex = _.indexOf(pickerEntries, parent);\r\n                        _.forEachRight(node.children.nodes, (child) => {\r\n                            addNode(child, parent.depth + 1, parentIndex + 1)\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // Nodes loaded, fill selection list\r\n        let selectedNodes = _.filter(pickerEntries, (node) => {\r\n            return node.selected\r\n        }).map((node) => {\r\n            return node.node\r\n        });\r\n\r\n        selectedPaths = _.map(selectedNodes, \"path\");\r\n        pickerEntries = _.filter(pickerEntries, pickerNode => {\r\n            return !pickerNode.hidden;\r\n        });\r\n\r\n        return {\r\n            ...ownProps,\r\n            pickerEntries: pickerEntries,\r\n        };\r\n    }\r\n\r\n    mapPropsToOptions(props) {\r\n        let openPaths = props.openPaths ? props.openPaths : [];\r\n\r\n        let fullyOpenPath = (props, path) => {\r\n            let rootFound = false;\r\n            _.tail(_.split(path, \"/\")).reduce((acc, it) => {\r\n                if (!rootFound) {\r\n                    _.forEach(props.rootPaths, rootPath => {\r\n                        rootFound = rootFound || _.startsWith(acc, rootPath);\r\n                    })\r\n                }\r\n                if (rootFound && _.indexOf(openPaths, acc) === -1) {\r\n                    openPaths.push(acc);\r\n                }\r\n                return acc + \"/\" + it\r\n            }, \"\");\r\n        };\r\n\r\n        if (props.selectedPaths) {\r\n            _.each(props.selectedPaths, path => fullyOpenPath(props, path));\r\n        }\r\n\r\n        let vars = {\r\n            rootPaths: props.rootPaths,\r\n            types: _.union(props.openableTypes, props.selectableTypes),\r\n            selectable: props.selectableTypes,\r\n            openable: props.openableTypes,\r\n            openPaths: openPaths,\r\n        };\r\n\r\n        if (props.queryVariables) {\r\n            _.assign(vars, props.queryVariables);\r\n        }\r\n\r\n        return {\r\n            variables: vars\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let GraphQLComponent = this.GraphQLComponent;\r\n\r\n        return <GraphQLComponent {...this.graphqlComponentProps} {...this.state} />\r\n    }\r\n}\r\n\r\nPicker.propTypes = {\r\n    /**\r\n     * List of root paths for the picker\r\n     */\r\n    rootPaths: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n    /**\r\n     * List of folder paths that are open by default (uncontrolled mode)\r\n     */\r\n    defaultOpenPaths: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * List of node types that can be \"opened\" (folders)\r\n     */\r\n    openableTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n    /**\r\n     * List of open folders in controlled mode\r\n     */\r\n    openPaths: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * List of node types that can be \"selected\" (items)\r\n     */\r\n    selectableTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n    /**\r\n     * Preselected items path (uncontrolled mode)\r\n     */\r\n    defaultSelectedPaths: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * List of selected path in controlled mode\r\n     */\r\n    selectedPaths: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * Callback when the selection has changed\r\n     */\r\n    onSelectionChange: PropTypes.func,\r\n\r\n    /**\r\n     * Component to use to do the full rendering of the tree. Should accept : pickerEntries,onSelectItem,onOpenItem . Other properties are passed through.\r\n     */\r\n    render: PropTypes.func,\r\n\r\n    /**\r\n     * Optional set of fragments to add to the graphQL query. Can be a string that identify a predefinedFragment or a fragment definition\r\n     */\r\n    fragments: PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.shape({\r\n            applyFor: PropTypes.string.isRequired,\r\n            variables: PropTypes.string,\r\n            gql: PropTypes.object.isRequired\r\n        })\r\n    ])),\r\n\r\n    /**\r\n     * Optional set of variable to pass to the graphQL query, in order to fulfill fragments needs\r\n     */\r\n    queryVariables: PropTypes.object\r\n\r\n};\r\n\r\n\r\nexport {Picker}"],"names":["getI18n","options","use","XHR","init","currentLanguage","undefined","contextPath","i18n","reducers","store","debugTool","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","state","action","_","value","key","resetStateReducer","type","theme","createMuiTheme","grey","blueGrey","lightBlue","red","deepOrange","green","darkTheme","purple","ThemeTester","props","switch","bind","themes","setState","previous","dxContext","setTheme","checked","React","Switch","Component","withDxContext","createOutletHistory","baseHistory","outletName","getPath","path","parts","base","location","pathname","newPath","indexOf","substr","split","p","startsWith","push","getState","newState","extractPath","s","part","length","initialLocation","listeners","history","createHref","replace","n","go","goBack","goForward","prompt","block","listener","unlisten","listen","event","assign","call","OutletRouter","createHashHistory","outletHistory","outlet","dispose","children","RouterExample","Test1","match","params","Test2","Test3","id","Route","NotificationProvider","notificationContext","notify","message","closeNotification","Snackbar","notification","open","propTypes","PropTypes","object","isRequired","childContextTypes","DxContextProvider","apollo","redux","mui","router","apolloClient","currentTheme","client","Children","only","uilang","createElement","I18nextProvider","HashRouter","ApolloProvider","Provider","generateClassName","createGenerateClassName","sheetsRegistry","sheetRegistry","SheetsRegistry","JssProvider","registry","MuiThemeProvider","sheetsManager","Map","WrappedComponent","context","contextTypes","SimpleListView","components","done","then","reactElements","componentDidMount","DynamicComponentsList","componentCache","data","ownProps","jcr","safeEval","eval","nodesByQuery","nodes","renderedContent","output","imports","concat","c","getImports","promise","Promise","all","imp","SystemJS","import","r","ReactDOM","m","splice","renderComponent","cacheMatch","f","dataComponent","query","gql","graphql","mapResultsToProps","mapPropsToOptions","string","element","LanguageSwitcher","anchorEl","target","lang","changeLanguage","availableLocales","handleClick","t","Boolean","handleClose","map","locale","translate","styles","palette","background","global","typography","fontFamily","text","secondary","SettingsLayout","classes","appBar","footer","appBarStyle","root","main","withStyles","primary","light","SearchBar","handleChange","onFocus","onBlur","persist","timeout","setTimeout","onChangeFilter","placeholderLabel","Input","focus","rootFocus","input","searchIcon","Search","style","withNodesFromPath","fragments","ViewComponent","node","vars","types","queryVariables","MutationExampleView","RenderComponent","uuid","name","myprop","setPropertyMutation","Date","removeNodeMutation","addNodeMutation","getTime","setProperty","addNode","removeNode","MutationExample","NodesTableViewMaterial","headers","row","func","arrayOf","withPathFromSelection","reduxStoreId","connect","withNotifications","PickerViewMaterial","pickerEntries","entry","selectable","onSelectItem","selected","onOpenItem","opacity","RadioButtonChecked","RadioButtonUnchecked","ListItemText","paddingLeft","depth","spacing","unit","openable","hasChildren","ExpandLess","ExpandMore","array","withTheme","PickerViewMaterialMultiple","CheckBox","CheckBoxOutlineBlank","Picker","graphqlComponentProps","that","openPaths","defaultOpenPaths","prevState","thispath","selectedPaths","defaultSelectedPaths","multiple","select","GraphQLComponent","render","prevProps","prevContext","onSelectionChange","nextProps","nextState","nodesById","index","pickerNode","pageInfo","totalCount","rootNodes","rootNode","hidden","hideRoot","openNodes","forEach","parent","parentIndex","child","selectedNodes","fullyOpenPath","rootFound","reduce","acc","it","rootPaths","rootPath","openableTypes","selectableTypes","oneOfType","shape"],"mappings":";;;;;;;;;;;;;AAEA;AACA,AAEA,SAASA,OAAT,CAAiBC,OAAjB,EAA0B;cACZA,WAAW,EAArB;SAEKC,GADL,CACSC,GADT;;;KAIKC,IAJL,CAIU;aACIH,QAAQI,eAAR,GAA0BJ,QAAQI,eAAlC,GAAoDC,SADxD;qBAEW,IAFX;eAGK,IAHL;;uBAKa;yBACE,KADF;SALb;;;eAUK;kBACG,KADH;sBAEO,wBAFP;uBAGQ,eAHR;oBAIK;SAdV;;iBAiBO;sBACK,CAACL,QAAQM,WAAR,GAAsBN,QAAQM,WAA9B,GAA4C,EAA7C,IAAmD;;KAtBzE;WAyBOC,IAAP;;;AC7BJ,IAAMC,WAAW,EAAjB;;AAEA,IAAMC,QAAQ,YAAY;QAClBC,kBAAJ;QACI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;oBACnBA,OAAOC,4BAAP,IAAuCD,OAAOC,4BAAP,CAAoC;kBAC7E,UAD6E;wBAEvE;SAFmC,CAAnD;;;WAMGC,kBAAY;YAACC,KAAD,uEAAS,EAAT;YAAaC,MAAb;eAAwBC,WAAA,CAAYR,QAAZ,EAAsB,UAACS,KAAD,EAAQC,GAAR;mBAAgBD,MAAMH,MAAMI,GAAN,CAAN,EAAkBH,MAAlB,CAAhB;SAAtB,CAAxB;KAAZ,EAAsGL,SAAtG,CAAP;CATU,EAAd;;AAYA,IAAMS,oBAAoB,SAApBA,iBAAoB,CAASL,KAAT,EAAgBC,MAAhB,EAAwB;QAC1CA,OAAOK,IAAP,KAAgB,aAApB,EAAmC;eACxBf,SAAP;;WAEGS,KAAP;CAJJ;;ACdA;;AAEA,IAAIO,QAAQC,0BAAe;aACd;oBACO;oBACAC,aAAK,GAAL;SAFP;2BAIc,GAJd;qBAKQ,GALR;iBAMI;kBACCC,iBAAS,GAAT;SAPL;mBASM;kBACDC,kBAAU,GAAV;SAVL;eAYE;kBACGC,YAAI,GAAJ;SAbL;iBAeI;kBACCC,mBAAW,GAAX;SAhBL;iBAkBI;kBACCC,cAAM,GAAN;SAnBL;gBAqBG;kBACEF,YAAI,GAAJ;;KAvBS;eA0BZ;mBACI;kBACD;uBACK;;SAHR;sBAMO;kBACJ;uBACK;;SARR;uBAWQ;kBACL;uBACK;;SAbR;qBAgBM;qBACA;uBACE;;;;CA5CX,CAAZ;;AAkDA,IAAIG,YAAYP,0BAAe;aAClB;cACC,MADD;oBAEO;oBACAC,aAAK,GAAL;SAHP;2BAKc,GALd;qBAMQ,GANR;iBAOI;kBACCO,eAAO,GAAP;SARL;mBAUM;kBACDF,cAAM,GAAN;SAXL;eAaE;kBACGF,YAAI,GAAJ;SAdL;iBAgBI;kBACCC,mBAAW,GAAX;SAjBL;iBAmBI;kBACCC,cAAM,GAAN;SApBL;gBAsBG;kBACEF,YAAI,GAAJ;;KAxBa;eA2BhB;mBACI;kBACD;uBACK;;SAHR;sBAMO;kBACJ;uBACK;;SARR;uBAWQ;kBACL;uBACK;;SAbR;qBAgBM;qBACA;uBACE;;;;CA7CP,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDMK;;;yBACUC,KAAZ,EAAmB;;;6HACTA,KADS;;cAEVC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;;cAEKC,MAAL,GAAc,CAACd,KAAD,EAAQQ,SAAR,CAAd;cACKf,KAAL,GAAa;qBACD;SADZ;;;;;;kCAKK;;;iBACAsB,QAAL,CAAc,UAACC,QAAD,EAAc;uBACnBL,KAAL,CAAWM,SAAX,CAAqBC,QAArB,CAA8BF,SAASG,OAAT,GAAmBnB,KAAnB,GAA2BQ,SAAzD;uBACO;6BACM,CAACQ,SAASG;iBADvB;aAFJ;;;;iCASK;mBACEC,6BAACC,iBAAD,IAAQ,OAAM,SAAd,EAAwB,UAAU,KAAKT,MAAvC,EAA+C,SAAS,KAAKnB,KAAL,CAAW0B,OAAnE,GAAP;;;;EAtBkBC,eAAME;;AA4BhCZ,sBAAca,gBAAgBb,mBAAhB,CAAd;;AC/BA,SAASc,mBAAT,CAA6BC,WAA7B,EAA0CC,UAA1C,EAAsD;;;QAE5CC,UAAU,SAAVA,OAAU,CAACC,IAAD,EAAU;YAClBC,QAAQ,EAAZ;YACIC,OAAOL,YAAYM,QAAZ,CAAqBC,QAAhC;YACIC,UAAUP,aAAa,GAAb,GAAmBE,IAAjC;YACIE,KAAKI,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAzB,EAA4B;mBACjBJ,KAAKK,MAAL,CAAYL,KAAKI,OAAL,CAAa,GAAb,IAAkB,CAA9B,CAAP;mBACOJ,KAAKK,MAAL,CAAY,CAAZ,EAAcL,KAAKI,OAAL,CAAa,GAAb,CAAd,CAAP;oBACQJ,KAAKM,KAAL,CAAW,IAAX,CAAR;oBACQzC,KAAA,CAAMkC,KAAN,EAAa,UAACQ,CAAD;uBAAOA,EAAEC,UAAF,CAAaZ,aAAa,GAA1B,IAAiCO,OAAjC,GAA2CI,CAAlD;aAAb,CAAR;;YAEAR,MAAMK,OAAN,CAAcD,OAAd,MAA2B,CAAC,CAAhC,EAAmC;kBACzBM,IAAN,CAAWN,OAAX;;eAEG,OAAMtC,MAAA,CAAOkC,KAAP,EAAa,IAAb,CAAN,GAA2B,GAAlC;KAbJ;;QAgBMW,WAAW,SAAXA,QAAW,CAAU/C,KAAV,EAAiB;YAC1BgD,iBAAJ;YACIhD,KAAJ,EAAW;uBACIgC,YAAYM,QAAZ,CAAqBtC,KAArB,GAA6BgC,YAAYM,QAAZ,CAAqBtC,KAAlD,GAA0D,EAArE;qBACS,YAAYiC,UAArB,IAAmCjC,KAAnC;SAFJ,MAGO,IAAIgC,YAAYM,QAAZ,CAAqBtC,KAAzB,EAAgC;uBACxBgC,YAAYM,QAAZ,CAAqBtC,KAAhC;mBACOgD,SAAS,YAAYf,UAArB,CAAP;;eAEGe,QAAP;KATJ;;QAYMC,cAAc,SAAdA,WAAc,CAASZ,IAAT,EAAe;YAC3BA,KAAKI,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAzB,EAA4B;mBACjBJ,KAAKK,MAAL,CAAYL,KAAKI,OAAL,CAAa,GAAb,IAAoB,CAAhC,CAAP;mBACOJ,KAAKK,MAAL,CAAY,CAAZ,EAAeL,KAAKI,OAAL,CAAa,GAAb,CAAf,CAAP;gBACIL,QAAQC,KAAKM,KAAL,CAAW,IAAX,CAAZ;gBACIO,IAAIjB,aAAa,GAArB;gBACIkB,OAAOjD,MAAA,CAAOkC,KAAP,EAAc,UAACQ,CAAD;uBAAOA,EAAEC,UAAF,CAAaK,CAAb,CAAP;aAAd,CAAX;gBACIC,IAAJ,EAAU;uBACCA,KAAKT,MAAL,CAAYQ,EAAEE,MAAd,CAAP;;;eAGD,EAAP;KAXJ;;QAcIC,kBAAkBnD,OAAA,CAAQ8B,YAAYM,QAApB,CAAtB;oBACgBC,QAAhB,GAA2BU,YAAYI,gBAAgBd,QAA5B,CAA3B;;QAEIe,YAAY,EAAhB;;QAEMC,aAAU;gBACJvB,YAAYoB,MADR;gBAEJpB,YAAY/B,MAFR;kBAGFoD,eAHE;oBAIA,oBAACf,QAAD,EAAc;mBACfN,YAAYwB,UAAZ,CAAuB,EAACjB,UAASL,QAAQI,SAASC,QAAjB,CAAV,EAAvB,CAAP;SALQ;cAON,cAACJ,IAAD,EAAOnC,KAAP,EAAiB;mBACZgC,YAAYc,IAAZ,CAAiBZ,QAAQC,IAAR,CAAjB,EAA+BY,SAAS/C,KAAT,CAA/B,CAAP;SARQ;iBAUH,iBAACmC,IAAD,EAAOnC,KAAP,EAAiB;wBACVyD,OAAZ,CAAoBvB,QAAQC,IAAR,CAApB,EAAkCY,SAAS/C,KAAT,CAAlC;SAXQ;YAaR,YAAC0D,CAAD,EAAO;wBACKC,EAAZ,CAAeD,CAAf;SAdQ;gBAgBJ,kBAAM;wBACEE,MAAZ;SAjBQ;mBAmBD,qBAAM;wBACDC,SAAZ;SApBQ;eAsBN,eAACC,MAAD,EAAY;mBACP9B,YAAY+B,KAAZ,CAAkBD,MAAlB,CAAP;SAvBQ;gBAyBJ,gBAACE,QAAD,EAAc;sBACRlB,IAAV,CAAekB,QAAf;mBACO,YAAM;sBACT,CAAOV,SAAP,EAAkBU,QAAlB;aADJ;SA3BQ;iBA+BH,mBAAM;;;KA/BnB;;QAoCMC,WAAWjC,YAAYkC,MAAZ,CAAoB,UAACC,KAAD,EAAW;YACxChC,OAAOc,YAAYkB,MAAM5B,QAAlB,CAAX;YACIvC,cAAJ;YACImE,MAAMnE,KAAN,IAAemE,MAAMnE,KAAN,CAAY,YAAYiC,UAAxB,CAAnB,EAAwD;oBAC5CkC,MAAMnE,KAAN,CAAY,YAAYiC,UAAxB,CAAR;;YAEAsB,WAAQjB,QAAR,CAAiBC,QAAjB,KAA8BJ,IAA9B,IAAsCoB,WAAQjB,QAAR,CAAiBtC,KAAjB,KAA2BA,KAArE,EAA4E;mBACjEoE,MAAP,CAAcb,WAAQjB,QAAtB,EAAgC6B,KAAhC;uBACQ7B,QAAR,CAAiBC,QAAjB,GAA4BJ,IAA5B;uBACQG,QAAR,CAAiBtC,KAAjB,GAAyBA,KAAzB;kBACA,CAAOsD,SAAP,EAAkB,UAACU,QAAD;uBAAcA,SAASK,IAAT,QAAmBd,WAAQjB,QAA3B,CAAd;aAAlB;;KAVS,CAAjB;;;;WAgBOiB,UAAP;;;ICjGEe;;;0BAEUpD,KAAZ,EAAmB;;;+HACTA,KADS;;YAEXc,cAAcuC,2BAAlB;cACKC,aAAL,GAAqBzC,oBAAoBC,WAApB,EAAiCd,MAAMuD,MAAvC,CAArB;;;;;;6CAGiB;;;+CAIE;iBACdD,aAAL,CAAmBE,OAAnB;;;;iCAGK;mBACG/C;kCAAA;kBAAQ,SAAS,KAAK6C,aAAtB;qBAA2CtD,KAAL,CAAWyD;aAAzD;;;;EAjBmBhD,eAAME;;ICF3B+C;;;2BAEU1D,KAAZ,EAAmB;;4HACTA,KADS;;;;;iCAIV;;gBAED2D,QAAQ,SAARA,KAAQ;uBACRlD;oCAAA;sBAAO,WAAW,CAAlB;;6CACI;0BAAY,MAAK,UAAjB,EAA4B,WAAU,IAAtC;;qBADJ;;6CAII;0BAAY,WAAU,GAAtB;;8BACmBmD,KAAN,CAAYC,MAAZ,CAAmB5E;;iBAN5B;aAAZ;gBAUI6E,QAAQ,SAARA,KAAQ;uBACRrD;oCAAA;sBAAO,WAAW,CAAlB;;6CACI;0BAAY,MAAK,UAAjB,EAA4B,WAAU,IAAtC;;;iBAFI;aAAZ;gBAQIsD,QAAQ,SAARA,KAAQ;uBACRtD;oCAAA;sBAAO,WAAW,CAAlB;;6CACI;0BAAY,MAAK,UAAjB,EAA4B,WAAU,IAAtC;;;iBAFI;aAAZ;;mBAQQA;4BAAA;kBAAQ,QAAQ,KAAKT,KAAL,CAAWgE,EAA3B;;;;;2CAEA;0BAAM,IAAI,eAAV;;qBADJ;;2CAEI;0BAAM,IAAI,eAAV;;qBAFJ;;2CAGI;0BAAM,IAAI,QAAV;;qBAHJ;;2CAII;0BAAM,IAAI,QAAV;;qBAJJ;iDAMKC,oBAAD,IAAO,MAAM,eAAb,EAA8B,WAAWN,KAAzC,GANJ;iDAOKM,oBAAD,IAAO,MAAM,QAAb,EAAuB,WAAWH,KAAlC,GAPJ;iDAQKG,oBAAD,IAAO,MAAM,QAAb,EAAuB,WAAWF,KAAlC;;aATR;;;;EAlCoBtD,eAAME;;ICC5BuD;;;kCACUlE,KAAZ,EAAmB;;;+IACTA,KADS;;YAGVmE,mBAHU,GAGa,MAAKnE,KAHlB,CAGVmE,mBAHU;;;cAKVrF,KAAL,GAAa;0BACK;yBACD,EADC;sBAEJ;;SAHd;;4BAOoBsF,MAApB,GAA6B,UAACC,OAAD,EAAa;kBACjCjE,QAAL,CAAc;8BACI;6BACDiE,OADC;0BAEL;;aAHb;SADJ;;4BASoBC,iBAApB,GAAwC,YAAM;kBACrClE,QAAL,CAAc;8BACI;6BACD,EADC;0BAEJ;;aAHd;SADJ;;;;;;0CAUc;mBACP;qCACkB,KAAKJ,KAAL,CAAWmE;aADpC;;;;iCAKK;;mBAEE1D;;;qBACGT,KAAL,CAAWyD,QADT;6CAGFc,mBAAD;kCACkB;kCACA,QADA;oCAEE;qBAHpB;sCAKsB,IALtB;6BAMa,KAAKvE,KAAL,CAAWmE,mBAAX,CAA+BG,iBAN5C;0BAOU,KAAKxF,KAAL,CAAW0F,YAAX,CAAwBC,IAPlC;0CAQ0B;4CACE;qBAT5B;6BAWahE;;0BAAM,IAAG,YAAT;6BAA4B3B,KAAL,CAAW0F,YAAX,CAAwBH;;;aAdhE;;;;EAxC2B1D;;AA4DnCuD,qBAAqBQ,SAArB,GAAiC;yBACRC,UAAUC,MAAV,CAAiBC;CAD1C;;AAIAX,qBAAqBY,iBAArB,GAAyC;yBAChBH,UAAUC,MAAV,CAAiBC;CAD1C;;ICnDME;;;+BACU/E,KAAZ,EAAmB;;;yIACTA,KADS;;0BAE6D,MAAKA,KAFlE;YAEVM,SAFU,eAEVA,SAFU;YAECmD,QAFD,eAECA,QAFD;YAEWlF,OAFX,eAEWA,IAFX;YAEiByG,MAFjB,eAEiBA,MAFjB;YAEyBC,QAFzB,eAEyBA,KAFzB;YAEgCC,GAFhC,eAEgCA,GAFhC;YAEqCC,MAFrC,eAEqCA,MAFrC;YAE6CC,YAF7C,eAE6CA,YAF7C;;YAGXtG,QAAQ,EAAZ;YACIoG,GAAJ,EAAS;gBACD,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;sBACnBG,YAAN,GAAqBH,GAArB;aADJ,MAEO;sBACGG,YAAN,GAAqBhG,KAArB;;sBAEMkB,QAAV,GAAqB,UAAClB,KAAD,EAAW;;sBAEvBe,QAAL,CAAc;kCACIf;iBADlB;aAFJ;;;YAQAiB,UAAU8E,YAAd,EAA4B;kBAClBA,YAAN,GAAqB9E,UAAU8E,YAA/B;SADJ,MAEO,IAAIA,YAAJ,EAAkB;kBACfA,YAAN,GAAqBA,YAArB;SADG,MAEA,IAAIJ,MAAJ,EAAY;gBACXhH,UAAU,EAACM,aAAYgC,UAAUhC,WAAvB,EAAd;gBACI,QAAO0G,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;uBACrB9B,MAAP,CAAclF,OAAd,EAAuBgH,MAAvB;;kBAEEI,YAAN,GAAqBE,gBAAOtH,OAAP,CAArB;;;cAGCc,KAAL,GAAaA,KAAb;;;;;;0CAGc;mBACP,EAACwB,WAAW,KAAKN,KAAL,CAAWM,SAAvB,EAAP;;;;iCAGK;yBACyD,KAAKN,KAD9D;gBACAM,SADA,UACAA,SADA;gBACWmD,QADX,UACWA,QADX;gBACqBlF,OADrB,UACqBA,IADrB;gBAC2ByG,MAD3B,UAC2BA,MAD3B;gBACmCC,QADnC,UACmCA,KADnC;gBAC0CC,GAD1C,UAC0CA,GAD1C;gBAC+CC,MAD/C,UAC+CA,MAD/C;yBAE8B,KAAKrG,KAFnC;gBAEAuG,YAFA,UAEAA,YAFA;gBAEcD,YAFd,UAEcA,YAFd;;;gBAIDzE,eAAYF,eAAM8E,QAAN,CAAeC,IAAf,CAAoB/B,QAApB,CAAhB;gBACIlF,OAAJ,EAAU;oBACFP,UAAU,EAACI,iBAAgBkC,UAAUmF,MAA3B,EAAmCnH,aAAYgC,UAAUhC,WAAzD,EAAd;oBACI,QAAOC,OAAP,yCAAOA,OAAP,OAAgB,QAApB,EAA8B;2BACnB2E,MAAP,CAAclF,OAAd,EAAuBO,OAAvB;;+BAEQkC,eAAMiF,aAAN,CAAoBC,4BAApB,EAAqC,EAACpH,MAAKR,QAAQC,OAAR,CAAN,EAArC,EAA8D2C,YAA9D,CAAZ;;gBAEAwE,MAAJ,EAAY;oBACJA,UAASS,yBAAb;oBACI5H,WAAU,EAAd;oBACI,QAAOmH,OAAP,yCAAOA,OAAP,OAAkB,QAAtB,EAAgC;wBACxBA,QAAO/F,IAAP,KAAgB,QAApB,EAA8B;kCACjBgE,YAAT;iCACQG,MAAR,GAAiB4B,QAAO5B,MAAxB;;;+BAGI9C,eAAMiF,aAAN,CAAoBE,yBAApB,EAAgC5H,QAAhC,EAAyC2C,YAAzC,CAAZ;;gBAEAyE,YAAJ,EAAkB;+BACF3E,eAAMiF,aAAN,CAAoBG,0BAApB,EAAoC,EAACP,QAAOF,YAAR,EAApC,EAA2DzE,YAA3D,CAAZ;;gBAEAsE,QAAJ,EAAW;+BACKxE,eAAMiF,aAAN,CAAoBI,mBAApB,EAA8B,EAACrH,OAAMA,KAAP,EAA9B,EAA6CkC,YAA7C,CAAZ;;;gBAGA0E,YAAJ,EAAkB;oBACVU,oBAAoBzF,UAAUyF,iBAAV,GAA8BzF,UAAUyF,iBAAxC,GAA4DC,+BAApF;oBACIC,iBAAiB3F,UAAU4F,aAAV,GAA0B5F,UAAU4F,aAApC,GAAoD,IAAIC,uBAAJ,EAAzE;+BACY1F,eAAMiF,aAAN,CAAoBU,oBAApB,EAAiC,EAACC,UAAUJ,cAAX,EAA4BF,mBAAkBA,iBAA9C,EAAjC,EAAmGtF,eAAMiF,aAAN,CAAoBY,2BAApB,EAAsC,EAACjH,OAAOgG,YAAR,EAAsBkB,eAAc,IAAIC,GAAJ,EAApC,EAAtC,EAAsF7F,YAAtF,CAAnG,CAAZ;;;;;;;2BAOQF,eAAMiF,aAAN,CAAoBxB,oBAApB,EAA0C,EAACC,qBAAoB,EAArB,EAA1C,EAAoExD,YAApE,CAAZ;;mBAEOA,YAAP;;;;EAhFwBF,eAAME;;AAoFtCoE,kBAAkBD,iBAAlB,GAAsC;eACvBH,UAAUC;CADzB;;ACnGA,SAAShE,aAAT,GAAyB;WACd,UAAC6F,gBAAD,EAAsB;YACrB9F;;;;;;;;;;yCACS;2BACGF,6BAAC,gBAAD,aAAkB,WAAW,KAAKiG,OAAL,CAAapG,SAA1C,IAAyD,KAAKN,KAA9D,EAAR;;;;UAFsBS,eAAME,SAAhC,CAAJ;;qBAMUgG,YAAV,GAAyB;uBACVhC,UAAUC;SADzB;;eAIOjE,YAAP;KAXJ;;;ICFEiG;;;4BACU5G,KAAZ,EAAmB;;;mIACTA,KADS;;cAEVlB,KAAL,GAAa;2BACM;SADnB;;;;;;;;;4CAMgB;;;gBACZ,KAAKkB,KAAL,CAAW6G,UAAX,IAAyB,CAAC,KAAKC,IAAnC,EAAyC;qBAChC9G,KAAL,CAAW6G,UAAX,CAAsBE,IAAtB,CAA2B,UAACC,aAAD,EAAmB;2BACrCF,IAAL,GAAY,IAAZ;2BACK1G,QAAL,CAAc,EAAC4G,eAAeA,aAAhB,EAAd;iBAFJ;;;;;6CAOa;iBACZC,iBAAL;;;;iCAGK;mBACE,KAAKH,IAAL,GAAarG;;;qBAAW3B,KAAL,CAAWkI;aAA9B,GAAuDvG,yCAA9D;;;;EAvBqBA,eAAME;;;;ACFnC,IASMuG;;;mCAEUlH,KAAZ,EAAmB;;;iJACTA,KADS;;cAEVmH,cAAL,GAAsB,EAAtB;;;;;;gDAGgC;gBAAjBC,IAAiB,QAAjBA,IAAiB;gBAAXC,QAAW,QAAXA,QAAW;;gBAC5BR,aAAa,EAAjB;;gBAEIS,MAAMF,KAAKE,GAAf;gBACIC,WAAWC,IAAf;gBACIF,OAAOA,IAAIG,YAAf,EAA6B;6BACZzI,KAAA,CAAMA,SAAA,CAAUsI,IAAIG,YAAJ,CAAiBC,KAA3B,EAAkC,gBAAlC,CAAN,EAA0D,UAAClF,CAAD;2BAAM+E,SAAS,MAAM/E,EAAEmF,eAAF,CAAkBC,MAAxB,GAAiC,GAA1C,CAAN;iBAA1D,CAAb;;;gBAGAC,UAAU,EAAd;kBACA,CAAOhB,UAAP,EAAmB,aAAK;0BACVgB,QAAQC,MAAR,CAAeC,EAAEC,UAAF,EAAf,CAAV;aADJ;gBAGIC,gBAAJ;gBACIJ,QAAQ3F,MAAR,GAAiB,CAArB,EAAwB;0BACVgG,QAAQC,GAAR,CAAYnJ,KAAA,CAAM6I,OAAN,EAAe,UAACO,GAAD;2BAASC,SAASC,MAAT,CAAgBF,GAAhB,CAAT;iBAAf,CAAZ,EAA2DrB,IAA3D,CAAgE,aAAK;wBACvEC,gBAAgBhI,KAAA,CAAM6H,UAAN,EAAkB,UAACkB,CAAD,EAAO;4BACrC/F,IAAI+F,EAAEC,UAAF,GAAe9F,MAAvB;4BACIqG,IAAIR,EAAErC,aAAF,WAAgBjF,cAAhB,EAAuB+H,QAAvB,2BAAoCC,CAApC,GAAR;0BACEC,MAAF,CAAS1G,CAAT;+BACOuG,CAAP;qBAJgB,CAApB;2BAMOvB,aAAP;iBAPM,CAAV;;;gCAYGK,QADP;4BAEgBY;;;;;0CAIFjI,OAAO;mBACd;2BACS;2BACD,gEAAgEA,MAAMgE,EAAtE,GAA2E;;aAF1F;;;;iCAOK;gBACD2E,kBAAkB,KAAK3I,KAAL,CAAW2I,eAAjC;;gBAEIC,aAAa5J,MAAA,CAAO,KAAKmI,cAAZ,EAA4B,UAAC0B,CAAD;uBAAOA,EAAEF,eAAF,KAAsBA,eAA7B;aAA5B,CAAjB;gBACIhI,qBAAJ;gBACIiI,UAAJ,EAAgB;+BACAA,WAAWE,aAAvB;aADJ,MAEO;oBACCC,QAAQC,GAAR,iBAAJ;;+BA2BYC,oBAAQF,KAAR,EAAe;2BAChB,KAAKG,iBADW;6BAEd,KAAKC;iBAFN,EAGTR,mBAAmB/B,cAHV,CAAZ;;qBAKKO,cAAL,CAAoBvF,IAApB,CAAyB,EAAC+G,iBAAiBA,eAAlB,EAAmCG,eAAenI,YAAlD,EAAzB;;;mBAGIF,6BAACE,YAAD,EAAe,KAAKX,KAApB,CAAR;;;;EA1F4BS,eAAME;;AA8F1CuG,sBAAsBxC,SAAtB,GAAkC;;;;QAI1BC,UAAUyE,MAAV,CAAiBvE,UAJS;;;;;qBASbF,UAAU0E;CAT/B;;AClGMC;;;8BAEUtJ,KAAZ,EAAkB0G,OAAlB,EAA2B;;;uIACjB1G,KADiB,EACX0G,OADW;;cAElB5H,KAAL,GAAa;sBACC;SADd;;;;;;oCAKQmE,OAAO;iBACV7C,QAAL,CAAc,EAACmJ,UAAUtG,MAAMuG,MAAjB,EAAd;;;;oCAGQC,MAAM;iBACTrJ,QAAL,CAAc,EAACmJ,UAAU,IAAX,EAAd;gBACIE,IAAJ,EAAU;qBACD/C,OAAL,CAAanI,IAAb,CAAkBmL,cAAlB,CAAiCD,IAAjC;;;;;iCAIC;;;gBACDE,mBAAmB,CAAC,IAAD,EAAO,IAAP,CAAvB;;mBAEQlJ;;;;qCACJ;sBAAQ,SAAS,KAAKmJ,WAAL,CAAiB1J,IAAjB,CAAsB,IAAtB;;yBACVF,KAAL,CAAW6J,CAAX,CAAa,iBAAb;iBAFE;;mCAGJ;sBAAM,MAAMC,QAAQ,KAAKhL,KAAL,CAAWyK,QAAnB,CAAZ,EAA0C,SAAS,KAAKQ,WAAL,CAAiB7J,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B,CAAnD;kCACgB,KAAKpB,KAAL,CAAWyK,QAD3B;qCAEsBS,GAAjB,CAAqB,UAACC,MAAD;+BAClBxJ;+CAAA;8BAAU,SAAS,OAAKsJ,WAAL,CAAiB7J,IAAjB,SAA4B+J,MAA5B,CAAnB,EAAwD,KAAKA,MAA7D;uCACiBA,MADjB;;yBADkB;qBAArB;;aALT;;;;EAvBuBxJ,eAAME;;AAoCrC2I,yBAAiB3C,YAAjB,GAAgC;UACtBhC,UAAUC;CADpB;;AAIA0E,2BAAmBY,uBAAU,oBAAV,EAAgCZ,wBAAhC,CAAnB;;ACzCA,IAAMa,SAAS,SAATA,MAAS;WAAU;cACf;6BACe9K,MAAM+K,OAAN,CAAcC,UAAd,CAAyBC;SAFzB;cAIf;uBACS,mBADT;uBAES,EAFT;qBAGO;SAPQ;gBASb;sBACM,MADN;wBAEQjL,MAAMkL,UAAN,CAAiBC,UAFzB;wBAGQ,GAHR;qBAIK,KAJL;uBAKO,QALP;mBAMGnL,MAAM+K,OAAN,CAAcK,IAAd,CAAmBC;SAfT;gBAiBb;wBACQ;;KAlBL;CAAf;;AAuBMC;;;4BACU3K,KAAZ,EAAmB;;8HACTA,KADS;;;;;iCAIV;yBACoD,KAAKA,KADzD;gBACC4K,OADD,UACCA,OADD;gBACUC,MADV,UACUA,MADV;gBACkBpH,QADlB,UACkBA,QADlB;gBAC4BqH,MAD5B,UAC4BA,MAD5B;gBACoCC,WADpC,UACoCA,WADpC;;mBAGDtK;;kBAAS,WAAWmK,QAAQI,IAA5B;;qCACI;sBAAQ,UAAS,OAAjB,EAAyB,SAAS,EAACA,MAAKJ,QAAQC,MAAd,EAAlC,EAAyD,OAAOE,WAAhE;;iBADJ;;;sBAIa,WAAWH,QAAQK,IAA5B;;iBAJJ;;;sBAOY,WAAWL,QAAQE,MAA3B;;;aARR;;;;EAPqBrK,eAAME;;AAwBnCgK,uBAAejG,SAAf,GAA2B;YACfC,UAAU0E,OADK;YAEf1E,UAAUyE;CAFtB;;AAKAuB,yBAAiBO,sBAAWf,MAAX,EAAmBQ,sBAAnB,CAAjB;;ACnDA,IAAMR,WAAS,SAATA,MAAS;WAAU;cACf;oBACM,GADN;mBAEM,SAFN;6BAGgB9K,MAAM+K,OAAN,CAAce,OAAd,CAAsBC,KAHtC;mBAIK,OAJL;oBAKM,MALN;wBAMU,MANV;0BAOY,KAPZ;wBAQU;SATK;mBAWV;oBACC,GADD;mBAEA/L,MAAM+K,OAAN,CAAcK,IAAd,CAAmBC,SAFnB;6BAGW,MAHX;mBAIA,OAJA;oBAKC,MALD;wBAMK,MANL;0BAOO,KAPP;wBAQK,KARL;uBASI;;;;SApBM;eAyBd;gCACiB,OADjB;gCAEiB,OAFjB;sCAGuB,8BAHvB;6BAIc;;SA7BA;oBAgCT;yBACK,MADL;4BAEQ,MAFR;2BAGO,MAHP;uBAIG;;KApCJ;CAAf;;AAwCMW;;;uBAEUrL,KAAZ,EAAmB;;;yHACTA,KADS;;cAEVsL,YAAL,GAAoB,MAAKA,YAAL,CAAkBpL,IAAlB,OAApB;cACKqL,OAAL,GAAe,MAAKA,OAAL,CAAarL,IAAb,OAAf;cACKsL,MAAL,GAAc,MAAKA,MAAL,CAAYtL,IAAZ,OAAd;cACKpB,KAAL,GAAa;mBACF;SADX;;;;;;qCAKSmE,OAAO;;kBAEVwI,OAAN;gBACI,KAAKC,OAAT,EAAkB;6BACD,KAAKA,OAAlB;;iBAECA,OAAL,GAAeC,WAAW,YAAW;qBAC5B3L,KAAL,CAAW4L,cAAX,CAA0B3I,MAAMuG,MAAN,CAAavK,KAAvC;aADsB,CAExBiB,IAFwB,CAEnB,IAFmB,CAAX,EAED,IAFC,CAAf;;;;kCAKM;iBACDE,QAAL,CAAc;uBACH;aADX;iBAGKJ,KAAL,CAAWuL,OAAX;;;;iCAGK;iBACAnL,QAAL,CAAc;uBACH;aADX;iBAGKJ,KAAL,CAAWwL,MAAX;;;;iCAGK;yBAEmC,KAAKxL,KAFxC;gBAEG4K,OAFH,UAEGA,OAFH;gBAEWf,CAFX,UAEWA,CAFX;gBAEcgC,gBAFd,UAEcA,gBAFd;;;mBAKDpL,6BAACqL,gBAAD,IAAO,SAAS,EAACd,MAAO,KAAKlM,KAAL,CAAWiN,KAAX,GAAmBnB,QAAQoB,SAA3B,GAAuCpB,QAAQI,IAAvD,EAA8DiB,OAAOrB,QAAQqB,KAA7E,EAAhB;0BACiB,KAAKX,YADtB;wBAEe,KAAKE,MAFpB;yBAGgB,KAAKD,OAHrB;kCAIyB,IAJzB;sBAKY,MALZ;6BAMoBM,oBAAoBhC,EAAE,yBAAF,CANxC;gCAOuBpJ;6CAAA;sBAAgB,SAAS,EAACuK,MAAMJ,QAAQsB,UAAf,EAAzB,EAAqD,UAAS,OAA9D;iDAAuEC,sBAAD;iBAP7F;uBAQc,KAAKnM,KAAL,CAAWoM;cAT7B;;;;EAzCgB3L,eAAME;;AAwD9B0K,oBAAYH,sBAAWf,QAAX,EAAmBD,uBAAU,oBAAV,EAAgCmB,iBAAhC,CAAnB,CAAZ;;;;ACrGA,AAMA,SAASgB,iBAAT,CAA2BC,SAA3B,EAAsC;WAC3B,UAACC,aAAD,EAAmB;;YAElBrD,oBAAoB,SAApBA,iBAAoB,OAAsB;gBAApB9B,IAAoB,QAApBA,IAAoB;gBAAdC,QAAc,QAAdA,QAAc;;gBACtCK,QAAQ,EAAZ;;gBAEIJ,MAAMF,KAAKE,GAAf;;gBAEIA,GAAJ,EAAS;oBACDA,IAAIkF,IAAR,EAAc;4BACFlF,IAAIkF,IAAJ,CAAS/I,QAAT,CAAkBiE,KAA1B;;;;gCAKDL,QADP;uBAEWK;;SAbf;;YAiBIyB,oBAAoB,SAApBA,iBAAoB,CAACnJ,KAAD,EAAW;gBAC3ByM,OAAO;sBACDzM,MAAMiB,IADL;uBAEAjB,MAAM0M;aAFjB;gBAII1M,MAAM2M,cAAV,EAA0B;wBACtB,CAASF,IAAT,EAAezM,MAAM2M,cAArB;;;mBAGG;2BACQF,IADR;sBAEG,CAACzM,MAAMiB;aAFjB;SATJ;;YAeI8H,QAAQC,GAAR,mBAAJ;;4CAmB2BD,KAA3B,EAAkCuD,SAAlC;;eAEOrD,oBAAQF,KAAR,EAAe;mBACXG,iBADW;qBAETC;SAFN,EAGJoD,aAHI,CAAP;KAvDJ;;;;;;;;ACPJ,IAOMK;;;iCAEU5M,KAAZ,EAAmB;;;6IACTA,KADS;;YAGX6M,kBAAkB,SAAlBA,eAAkB,CAAC7M,KAAD;mBAAYS;gCAAA;;;wCAC1B;;;2CACI;;;gDACI;;;yBADJ;;gDAEI;;;yBAFJ;;gDAGI;;;yBAHJ;;gDAII;;;;;iBANkB;;wCAS1B;;0BACWiH,KAAN,GAAc1H,MAAM0H,KAAN,CAAYsC,GAAZ,CAAgB;+BAC3BvJ;+CAAA;8BAAU,KAAK+L,KAAKM,IAApB;;oDACI;;qCAAiBC;6BADrB;;oDAEI;;qCAAiBC,MAAL,CAAY/N;6BAF5B;;oDAGI;;;qDAAW;sCAAQ,SAAS;mDAAM,MAAKe,KAAL,CAAWiN,mBAAX,CAA+B;2DAClD;0DACDT,KAAKvL,IADJ;2DAEC,UAAU,IAAIiM,IAAJ;iDAHuC;gEAK7C,CAAC,YAAD;;6CALc,CAAN;yCAAjB;;;6BAHf;;oDAWI;;;qDAAW;sCAAQ,SAAS;mDAAM,MAAKlN,KAAL,CAAWmN,kBAAX,CAA8B;2DACjD;0DACDX,KAAKvL;iDAF6C;gEAI5C,CAAC,YAAD;6CAJc,CAAN;yCAAjB;;;;yBAZY;qBAAhB,CAAd,GAmBG;;aA7BM;SAAtB;;cAkCKN,SAAL,GAAiB0L,kBAAkB,CAAC;sBACtB,MADsB;iBAE3BrD,GAAL;SAF+B,CAAlB,EAOb6D,eAPa,CAAjB;;;;;;iCAWK;;;gBACDlM,eAAY,KAAKA,SAArB;mBAEIF;;;;qCACI;sBAAQ,SAAS;mCAAM,OAAKT,KAAL,CAAWoN,eAAX,CAA2B;2CACnC;0CACA,UAAW,IAAIF,IAAJ,GAAWG,OAAX,EADX;2CAEC,UAAU,IAAIH,IAAJ;iCAHwB;gDAK9B,CAAC,YAAD;6BALG,CAAN;yBAAjB;;iBADJ;6CASKvM,YAAD,IAAW,MAAM,GAAjB,EAAsB,OAAO,CAAC,iBAAD,CAA7B;aAVR;;;;EApD0BA;;AAoElC,IAAM2M,cAActE,GAAd,kBAAN;;AAeA,IAAMuE,UAAUvE,GAAV,kBAAN;;AAYA,IAAMwE,aAAaxE,GAAb,kBAAN;;AAQA,IAAIyE,kBAAkBxE,oBAAQqE,WAAR,EAAqB,EAACP,MAAM,qBAAP,EAArB,EAClB9D,oBAAQsE,OAAR,EAAiB,EAACR,MAAM,iBAAP,EAAjB,EACI9D,oBAAQuE,UAAR,EAAoB,EAACT,MAAM,oBAAP,EAApB,EAAkDH,mBAAlD,CADJ,CADkB,CAAtB;;AC1GA,IAAIc,yBAAyB,SAAzBA,sBAAyB,CAAU1N,KAAV,EAAiB;;;QAEtC2N,UAAU3N,MAAM,SAAN,IAAmBA,MAAM,SAAN,CAAnB,GAAsC;eAChDS;+BAAA;;;oCACI;;;;SAF4C;KAApD;;QAKImN,MAAM5N,MAAM,KAAN,IAAeA,MAAM,KAAN,CAAf,GAA8B,UAACwM,IAAD;eAAW/L;+BAAA;cAAU,KAAK+L,KAAKvL,IAApB;;oCAC3C;;sBAAkB,cAAN,IAAwBjB,MAAM,cAAN,EAAsBmD,IAAtB,QAAiCqJ,IAAjC,CAAxB,GAAiEA,KAAKO;;SADlD;KAAxC;;WAIQtM;wBAAA;;;gCACI;;;SADJ;;gCAII;;kBACWiH,KAAN,GAAc1H,MAAM0H,KAAN,CAAYsC,GAAZ,CAAgB4D,GAAhB,CAAd,GAAqC;;KALtD;CAXJ;;AAqBAF,uBAAuBhJ,SAAvB,GAAmC;aACtBC,UAAUkJ,IADY;SAE1BlJ,UAAUkJ,IAFgB;kBAGjBlJ,UAAUkJ,IAHO;WAIxBlJ,UAAUmJ,OAAV,CAAkBnJ,UAAUC,MAA5B;CAJX;;ACrBA,SAASmJ,qBAAT,CAA+BC,YAA/B,EAA6C;WAClC,UAACvH,gBAAD,EAAsB;eAClBwH,mBACH,UAACnP,KAAD,EAAQuI,QAAR;gCACOA,QADP;sBAEWvI,MAAM,mBAAmBkP,YAAzB,KAA0ClP,MAAM,mBAAmBkP,YAAzB,EAAuC9L,MAAvC,KAAkD,CAA7F,GAAkGpD,MAAM,mBAAmBkP,YAAzB,EAAuC,CAAvC,CAAlG,GAA8I;;SAHrJ,EAKH;mBAAO,EAAP;SALG,EAKSvH,gBALT,CAAP;KADJ;;;ACFJ,SAASyH,iBAAT,GAA6B;WAClB,UAACzH,gBAAD,EAAsB;YACrB9F;;;;;;;;;;yCACS;2BACGF,6BAAC,gBAAD,aAAkB,qBAAqB,KAAKiG,OAAL,CAAavC,mBAApD,IAA6E,KAAKnE,KAAlF,EAAR;;;;UAFsBS,eAAME,SAAhC,CAAJ;;qBAMUgG,YAAV,GAAyB;iCACAhC,UAAUC;SADnC;;eAIOjE,YAAP;KAXJ;;;ACCAwN,6BAAqB,4BAAUnO,KAAV,EAAiB;;;WAC9BS;uBAAA;;cACG2N,aAAN,CAAoBpE,GAApB,CAAwB,UAACqE,KAAD;mBACpB5N;mCAAA;kBAAU,YAAV;6BACmB;+BAAM4N,MAAMC,UAAN,GAAmBtO,MAAMuO,YAAN,CAAmBF,MAAMpN,IAAzB,EAA+B,CAACoN,MAAMG,QAAtC,CAAnB,GAAqExO,MAAMyO,UAAN,CAAiBJ,MAAMpN,IAAvB,EAA6B,CAACoN,MAAM5J,IAApC,CAA3E;qBADnB;yBAEe4J,MAAMpN;;;2CAEd;sBAAc,OAAOoN,MAAMC,UAAN,GAAmB,EAAnB,GAAwB,EAACI,SAAS,CAAV,EAA7C;0BAAkEF,QAAN,GAAiB/N,6BAACkO,kCAAD,OAAjB,GACxDlO,6BAACmO,oCAAD;iBALX;6CAMQC,uBAAD,IAAc,OAAO,EAACC,aAAaT,MAAMU,KAAN,GAAc/O,MAAMX,KAAN,CAAY2P,OAAZ,CAAoBC,IAAhD,EAArB,EAA4E,WAA5E;6BACuBjP,MAAM,cAAN,IAAwBA,MAAM,cAAN,EAAsBmD,IAAtB,QAAiCkL,KAAjC,CAAxB,GAAkEA,MAAMtB,IAD/F,GANP;;sDAQO;;0BACWmC,QAAN,IAAkBb,MAAMc,WAAxB,GACG1O;6CAAA;0BAAY,SAAS;uCAAMT,MAAMyO,UAAN,CAAiBJ,MAAMpN,IAAvB,EAA6B,CAACoN,MAAM5J,IAApC,CAAN;6BAArB;8BAA6EA,IAAN,GACnEhE,6BAAC2O,0BAAD,OADmE,GACnD3O,6BAAC4O,0BAAD;qBAFvB,GAEsD;;aAZ9C;SAAxB;KADL;CADJ;;AAsBAlB,2BAAmBzJ,SAAnB,GAA+B;mBACZC,UAAU2K,KAAV,CAAgBzK,UADJ;kBAEbF,UAAUkJ,IAFG;gBAGflJ,UAAUkJ,IAHK;kBAIblJ,UAAUkJ;CAJ5B;;AAOAM,6BAAqBoB,uBAAYpB,0BAAZ,CAArB;;AC7BIqB,qCAA6B,oCAAUxP,KAAV,EAAiB;;;WACtCS;uBAAA;;cACG2N,aAAN,CAAoBpE,GAApB,CAAwB,UAACqE,KAAD;mBACpB5N;mCAAA;kBAAU,YAAV;6BACmB;+BAAM4N,MAAMC,UAAN,GAAmBtO,MAAMuO,YAAN,CAAmBF,MAAMpN,IAAzB,EAA+B,CAACoN,MAAMG,QAAtC,EAAgD,IAAhD,CAAnB,GAA2ExO,MAAMyO,UAAN,CAAiBJ,MAAMpN,IAAvB,EAA6B,CAACoN,MAAM5J,IAApC,CAAjF;qBADnB;yBAEe4J,MAAMpN;;;2CAEd;sBAAc,OAAOoN,MAAMC,UAAN,GAAmB,EAAnB,GAAwB,EAACI,SAAS,CAAV,EAA7C;0BAAkEF,QAAN,GAAiB/N,6BAACgP,wBAAD,OAAjB,GACxDhP,6BAACiP,oCAAD;iBALX;6CAMQb,uBAAD,IAAc,OAAO,EAACC,aAAaT,MAAMU,KAAN,GAAc/O,MAAMX,KAAN,CAAY2P,OAAZ,CAAoBC,IAAhD,EAArB,EAA4E,WAA5E;6BACuBjP,MAAM,cAAN,IAAwBA,MAAM,cAAN,EAAsBmD,IAAtB,QAAiCkL,KAAjC,CAAxB,GAAkEA,MAAMtB,IAD/F,GANP;;sDAQO;;0BACWmC,QAAN,IAAkBb,MAAMc,WAAxB,GACG1O;6CAAA;0BAAY,SAAS;uCAAMT,MAAMyO,UAAN,CAAiBJ,MAAMpN,IAAvB,EAA6B,CAACoN,MAAM5J,IAApC,CAAN;6BAArB;8BAA6EA,IAAN,GACnEhE,6BAAC2O,0BAAD,OADmE,GACnD3O,6BAAC4O,0BAAD;qBAFvB,GAEsD;;aAZ9C;SAAxB;KADL;CADJ;;AAsBAG,mCAA2B9K,SAA3B,GAAuC;mBACpBC,UAAU2K,KAAV,CAAgBzK,UADI;kBAEpBF,UAAUkJ,IAFU;gBAGvBlJ,UAAUkJ,IAHa;kBAIrBlJ,UAAUkJ;CAJ5B;;AAOA2B,qCAA6BD,uBAAYC,kCAAZ,CAA7B;;;;AClCA,IAOMG;;;oBAEU3P,KAAZ,EAAmB;;;mHACTA,KADS;;YAGX+I,QAAQC,GAAR,mBAAJ;;YAsCMsD,SAzCS,GAyC+BtM,KAzC/B,CAyCTsM,SAzCS;YAyCKsD,qBAzCL,2BAyC+B5P,KAzC/B;;;4CA2CY+I,KAA3B,EAAkCuD,SAAlC;;cAEKsD,qBAAL,GAA6BA,qBAA7B;;YAEI9Q,QAAQ,EAAZ;YACI+Q,YAAJ;YACI,CAAC7P,MAAM8P,SAAX,EAAsB;kBACZA,SAAN,GAAkB9P,MAAM+P,gBAAN,GAAyB/Q,OAAA,CAAQgB,MAAM+P,gBAAd,CAAzB,GAA2D,EAA7E;kCACsBtB,UAAtB,GAAmC,UAACxN,IAAD,EAAMwD,IAAN,EAAe;qBACzCrE,QAAL,CAAe,UAAC4P,SAAD,EAAYhQ,KAAZ;2BAAuB;mCACvByE,mCACJuL,UAAUF,SADN,IAEP7O,IAFO,KAGPjC,QAAA,CAASgR,UAAUF,SAAnB,EAA8B,UAACG,QAAD;mCAAcA,aAAahP,IAA3B;yBAA9B;qBAJO;iBAAf;oBAMIjB,MAAMyO,UAAV,EAAsB;0BACZA,UAAN,CAAiBxN,IAAjB,EAAsBwD,IAAtB;;aARR;;;YAaA,CAACzE,MAAMkQ,aAAX,EAA0B;kBAChBA,aAAN,GAAsBlQ,MAAMmQ,oBAAN,GAA6BnR,OAAA,CAAQgB,MAAMmQ,oBAAd,CAA7B,GAAoE,EAA1F;kCACsB5B,YAAtB,GAAqC,UAACtN,IAAD,EAAMuN,QAAN,EAAe4B,QAAf,EAA4B;qBACxDhQ,QAAL,CAAc,UAAC4P,SAAD,EAAYhQ,KAAZ;2BAAsB;uCACjBwO,uCACP4B,WAAWJ,UAAUE,aAArB,GAAqC,EAD9B,IAEPjP,IAFO,KAGPjC,QAAA,CAASgR,UAAUE,aAAnB,EAAkC,UAACD,QAAD;mCAAcA,aAAahP,IAA3B;yBAAlC;qBAJE;iBAAd;oBAMIjB,MAAMuO,YAAV,EAAwB;0BACdA,YAAN,CAAmBtN,IAAnB,EAAwBoP,MAAxB,EAA+BD,QAA/B;;aARR;;cAYCtR,KAAL,GAAaA,KAAb;;cAEKwR,gBAAL,GAAwBrH,oBAAQF,KAAR,EAAe;mBAC5B,MAAKG,iBADuB;qBAE1B,MAAKC;SAFM,EAGrB,MAAKnJ,KAAL,CAAWuQ,MAHU,CAAxB;;;;;;2CAMeC,WAAWR,WAAWS,aAAa;gBAC9C,KAAKzQ,KAAL,CAAW0Q,iBAAX,IAAgC,CAAC1R,SAAA,CAAU,KAAKF,KAAL,CAAWoR,aAArB,EAAmCF,UAAUE,aAA7C,CAArC,EAAkG;qBACzFlQ,KAAL,CAAW0Q,iBAAX,CAA6B,KAAK5R,KAAL,CAAWoR,aAAxC;;;;;kDAIkBS,WAAWC,WAAW;gBACtCtE,SADsC,GAC4BqE,SAD5B,CACtCrE,SADsC;gBAC3BmC,UAD2B,GAC4BkC,SAD5B,CAC3BlC,UAD2B;gBACfF,YADe,GAC4BoC,SAD5B,CACfpC,YADe;gBACEqB,qBADF,2BAC4Be,SAD5B;;oBAE5C,CAAS,KAAKf,qBAAd,EAAqCA,qBAArC;;;;gDAGgC;gBAAjBxI,IAAiB,QAAjBA,IAAiB;gBAAXC,QAAW,QAAXA,QAAW;;gBAC5B6I,gBAAgB7I,SAAS6I,aAA7B;gBACIJ,YAAYzI,SAASyI,SAAT,GAAqBzI,SAASyI,SAA9B,GAA0C,EAA1D;;gBAEI1B,gBAAgB,EAApB;gBACIyC,YAAY,EAAhB;gBACIvJ,MAAMF,KAAKE,GAAf;;gBAEIiG,UAAU,SAAVA,OAAU,CAAUf,IAAV,EAAgBuC,KAAhB,EAAuB+B,QAAvB,EAA8B;oBACpCtC,WAAW,KAAf;oBACIhC,KAAK8B,UAAT,EAAqB;+BACNtP,SAAA,CAAUkR,aAAV,EAAyB1D,KAAKvL,IAA9B,MAAwC,CAAC,CAApD;;oBAEA8P,aAAa;0BACPvE,KAAKO,IADE;0BAEPP,KAAKvL,IAFE;0BAGPuL,KAAK0C,QAAL,IAAiBlQ,SAAA,CAAU8Q,SAAV,EAAqBtD,KAAKvL,IAA1B,MAAoC,CAAC,CAH/C;8BAIHuN,QAJG;8BAKHhC,KAAK0C,QALF;gCAMD1C,KAAK8B,UANJ;2BAONS,KAPM;4BAQL/P,QAAA,CAAS,QAAT,EAAmB+P,QAAQ,CAA3B,CARK;0BASPvC,IATO;4BAUL,KAVK;iCAWAA,KAAK/I,QAAL,CAAcuN,QAAd,CAAuBC,UAAvB,GAAoC;iBAXrD;8BAacvI,MAAd,CAAqBoI,QAArB,EAA4B,CAA5B,EAA+BC,UAA/B;0BACUvE,KAAKM,IAAf,IAAuBiE,UAAvB;uBACOA,UAAP;aApBJ;;gBAuBIzJ,GAAJ,EAAS;oBACDA,IAAI4J,SAAR,EAAmB;6BACf,CAAU5J,IAAI4J,SAAd,EAAyB,oBAAY;4BAC7BlG,OAAOuC,QAAQ4D,QAAR,EAAkB,CAAlB,EAAqB,CAArB,CAAX;6BACKC,MAAL,GAAc/J,SAASgK,QAAvB;qBAFJ;;oBAKA/J,IAAIgK,SAAR,EAAmB;4BACf,CAAShK,IAAIgK,SAAb,EAAwB,CAAC,MAAD,CAAxB,EAAkCC,OAAlC,CAA0C,UAAC/E,IAAD,EAAU;4BAC5CgF,SAASX,UAAUrE,KAAKM,IAAf,CAAb;4BACI0E,MAAJ,EAAY;gCACJC,cAAczS,SAAA,CAAUoP,aAAV,EAAyBoD,MAAzB,CAAlB;0CACA,CAAehF,KAAK/I,QAAL,CAAciE,KAA7B,EAAoC,UAACgK,KAAD,EAAW;wCACnCA,KAAR,EAAeF,OAAOzC,KAAP,GAAe,CAA9B,EAAiC0C,cAAc,CAA/C;6BADJ;;qBAJR;;;;;gBAaJE,gBAAgB3S,QAAA,CAASoP,aAAT,EAAwB,UAAC5B,IAAD,EAAU;uBAC3CA,KAAKgC,QAAZ;aADgB,EAEjBxE,GAFiB,CAEb,UAACwC,IAAD,EAAU;uBACNA,KAAKA,IAAZ;aAHgB,CAApB;;4BAMgBxN,KAAA,CAAM2S,aAAN,EAAqB,MAArB,CAAhB;4BACgB3S,QAAA,CAASoP,aAAT,EAAwB,sBAAc;uBAC3C,CAAC2C,WAAWK,MAAnB;aADY,CAAhB;;gCAKO/J,QADP;+BAEmB+G;;;;;0CAILpO,OAAO;gBACjB8P,YAAY9P,MAAM8P,SAAN,GAAkB9P,MAAM8P,SAAxB,GAAoC,EAApD;;gBAEI8B,gBAAgB,SAAhBA,aAAgB,CAAC5R,KAAD,EAAQiB,IAAR,EAAiB;oBAC7B4Q,YAAY,KAAhB;sBACA,CAAO7S,OAAA,CAAQiC,IAAR,EAAc,GAAd,CAAP,EAA2B6Q,MAA3B,CAAkC,UAACC,GAAD,EAAMC,EAAN,EAAa;wBACvC,CAACH,SAAL,EAAgB;iCACZ,CAAU7R,MAAMiS,SAAhB,EAA2B,oBAAY;wCACvBJ,aAAa7S,YAAA,CAAa+S,GAAb,EAAkBG,QAAlB,CAAzB;yBADJ;;wBAIAL,aAAa7S,SAAA,CAAU8Q,SAAV,EAAqBiC,GAArB,MAA8B,CAAC,CAAhD,EAAmD;kCACrCnQ,IAAV,CAAemQ,GAAf;;2BAEGA,MAAM,GAAN,GAAYC,EAAnB;iBATJ,EAUG,EAVH;aAFJ;;gBAeIhS,MAAMkQ,aAAV,EAAyB;sBACrB,CAAOlQ,MAAMkQ,aAAb,EAA4B;2BAAQ0B,cAAc5R,KAAd,EAAqBiB,IAArB,CAAR;iBAA5B;;;gBAGAwL,OAAO;2BACIzM,MAAMiS,SADV;uBAEAjT,OAAA,CAAQgB,MAAMmS,aAAd,EAA6BnS,MAAMoS,eAAnC,CAFA;4BAGKpS,MAAMoS,eAHX;0BAIGpS,MAAMmS,aAJT;2BAKIrC;aALf;;gBAQI9P,MAAM2M,cAAV,EAA0B;wBACtB,CAASF,IAAT,EAAezM,MAAM2M,cAArB;;;mBAGG;2BACQF;aADf;;;;iCAKK;gBACD6D,mBAAmB,KAAKA,gBAA5B;;mBAEO7P,6BAAC,gBAAD,eAAsB,KAAKmP,qBAA3B,EAAsD,KAAK9Q,KAA3D,EAAP;;;;EAlNa2B,eAAME;;AAsN3BgP,OAAOjL,SAAP,GAAmB;;;;eAIJC,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,EAAoCvE,UAJhC;;;;;sBASGF,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,CATH;;;;;mBAcAzE,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,EAAoCvE,UAdpC;;;;;eAmBJF,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,CAnBI;;;;;qBAwBEzE,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,EAAoCvE,UAxBtC;;;;;0BA6BOF,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,CA7BP;;;;;mBAkCAzE,UAAUmJ,OAAV,CAAkBnJ,UAAUyE,MAA5B,CAlCA;;;;;uBAuCIzE,UAAUkJ,IAvCd;;;;;YA4CPlJ,UAAUkJ,IA5CH;;;;;eAiDJlJ,UAAUmJ,OAAV,CAAkBnJ,UAAU0N,SAAV,CAAoB,CAC7C1N,UAAUyE,MADmC,EAE7CzE,UAAU2N,KAAV,CAAgB;kBACF3N,UAAUyE,MAAV,CAAiBvE,UADf;mBAEDF,UAAUyE,MAFT;aAGPzE,UAAUC,MAAV,CAAiBC;KAH1B,CAF6C,CAApB,CAAlB,CAjDI;;;;;oBA6DCF,UAAUC;;CA7D9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}