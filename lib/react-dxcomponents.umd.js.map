{"version":3,"file":"react-dxcomponents.umd.js","sources":["../src/javascript/i18n/getI18n.js","../src/javascript/reduxStore.js","../src/javascript/theme/theme.js","../src/javascript/theme/ThemeTester.jsx","../src/javascript/router/createOutletHistory.js","../src/javascript/router/OutletRouter.jsx","../src/javascript/notification/NotificationProvider.jsx","../src/javascript/context/DxContextProvider.jsx","../src/javascript/context/withDxContext.jsx","../src/javascript/i18n/LanguageSwitcher.jsx","../src/javascript/layout/SettingsLayout.jsx","../src/javascript/layout/SearchBar.jsx","../src/javascript/helpers/withNodeFromPath.jsx","../src/javascript/helpers/withNodesFromPath.jsx","../src/javascript/helpers/withPathFromSelection.jsx","../src/javascript/notification/withNotifications.jsx","../src/javascript/picker/PickerViewMaterial.jsx","../src/javascript/picker/PickerViewMaterialMultiple.jsx","../src/javascript/picker/Picker.jsx"],"sourcesContent":["import i18n from 'i18next';\nimport XHR from 'i18next-xhr-backend';\n// import LanguageDetector from 'i18next-browser-languagedetector/';\nimport { reactI18nextModule } from 'react-i18next';\n\nfunction getI18n(options) {\n    options = options || {};\n    i18n\n        .use(XHR)\n        // .use(LanguageDetector)\n        // .use(reactI18nextModule) // if not using I18nextProvider\n        .init({\n            lng: (options.currentLanguage ? options.currentLanguage : undefined),\n            fallbackLng: 'en',\n            debug: true,\n\n            interpolation: {\n                escapeValue: false, // not needed for react!!\n            },\n\n            // react i18next special options (optional)\n            react: {\n                wait: false,\n                bindI18n: 'languageChanged loaded',\n                bindStore: 'added removed',\n                nsMode: 'default'\n            },\n\n            backend: {\n                loadPath: (options.contextPath ? options.contextPath : '') + '/modules/{{ns}}/javascript/locales/{{lng}}.json',\n            }\n        });\n    return i18n;\n}\n\n\nexport { getI18n };","import {createStore} from 'redux'\nimport * as _ from \"lodash\";\n\nconst reducers = {};\n\nconst store = function () {\n    let debugTool;\n    if (typeof window !== 'undefined') {\n        debugTool = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n            name: \"DX Redux\",\n            instanceId: \"dx\"\n        });\n    }\n\n    return createStore((state = {}, action) => _.mapValues(reducers, (value, key) => value(state[key], action)), debugTool);\n}();\n\nconst resetStateReducer = function(state, action) {\n    if (action.type === 'RESET_STATE') {\n        return undefined;\n    }\n    return state;\n};\n\nexport {reducers, store, resetStateReducer};\n","import {createMuiTheme} from 'material-ui';\nimport {blueGrey, lightBlue, red, grey, purple, green, deepOrange} from 'material-ui/colors/index'\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nlet theme = createMuiTheme({\n    palette: {\n        background: {\n            global: grey[200],\n        },\n        contrastThreshold: 2.5,\n        tonalOffset: 0.2,\n        primary: {\n            main: blueGrey[600],\n        },\n        secondary: {\n            main: lightBlue[600],\n        },\n        error: {\n            main: red[400],\n        },\n        publish: {\n            main: deepOrange[500],\n        },\n        enabled: {\n            main: green[400],\n        },\n        delete: {\n            main: red[600],\n        }\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                color: \"inherit\",\n            }\n        },\n        MuiTableCell: {\n            body: {\n                color: \"inherit\",\n            }\n        },\n        MuiIconButton: {\n            root: {\n                color: \"inherit\",\n            }\n        },\n        MuiCheckbox: {\n            default: {\n                color: \"inherit\",\n            }\n        }\n    }\n});\n\nlet darkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        background: {\n            global: grey[900]\n        },\n        contrastThreshold: 3.0,\n        tonalOffset: 0.2,\n        primary: {\n            main: purple[500]\n        },\n        secondary: {\n            main: green[400]\n        },\n        error: {\n            main: red[200]\n        },\n        publish: {\n            main: deepOrange[500],\n        },\n        enabled: {\n            main: green[400],\n        },\n        delete: {\n            main: red[600],\n        }\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                color: \"inherit\",\n            }\n        },\n        MuiTableCell: {\n            body: {\n                color: \"inherit\",\n            }\n        },\n        MuiIconButton: {\n            root: {\n                color: \"inherit\",\n            }\n        },\n        MuiCheckbox: {\n            default: {\n                color: \"inherit\",\n            }\n        }\n    }\n});\n\n\nexport {theme, darkTheme}\n","import React from 'react';\nimport {withDxContext} from \"../context\";\nimport {Switch} from 'material-ui'\nimport {theme, darkTheme} from \"./theme\";\n\nclass ThemeTester extends React.Component {\n    constructor(props) {\n        super(props);\n        this.switch = this.switch.bind(this);\n\n        this.themes = [theme, darkTheme];\n        this.state = {\n            checked:false\n        };\n    }\n\n    switch() {\n        this.setState((previous) => {\n            this.props.dxContext.setTheme(previous.checked ? theme : darkTheme);\n            return {\n                checked: !previous.checked\n            }\n        });\n    }\n\n\n    render() {\n        return <Switch color=\"default\" onChange={this.switch} checked={this.state.checked}/>\n    }\n\n}\n\n\nThemeTester = withDxContext()(ThemeTester);\n\nexport {ThemeTester}","import * as _ from \"lodash\";\n\nfunction createOutletHistory(baseHistory, outletName) {\n\n    const getPath = (path) => {\n        let parts = [];\n        let base = baseHistory.location.pathname;\n        let newPath = outletName + ':' + path;\n        if (base.indexOf('(') > -1) {\n            base = base.substr(base.indexOf('(')+1);\n            base = base.substr(0,base.indexOf(')'));\n            parts = base.split('//')\n            parts = _.map(parts, (p)=> (p.startsWith(outletName + ':') ? newPath : p));\n        }\n        if (parts.indexOf(newPath) === -1) {\n            parts.push(newPath);\n        }\n        return '/('+ _.join(parts,'//') + ')';\n    };\n\n    const getState = function (state) {\n        let newState;\n        if (state) {\n            newState = baseHistory.location.state ? baseHistory.location.state : {};\n            newState['router_' + outletName] = state;\n        } else if (baseHistory.location.state) {\n            newState = baseHistory.location.state;\n            delete newState['router_' + outletName]\n        }\n        return newState;\n    };\n\n    const extractPath = function(base) {\n        if (base.indexOf('(') > -1) {\n            base = base.substr(base.indexOf('(') + 1);\n            base = base.substr(0, base.indexOf(')'));\n            let parts = base.split('//')\n            let s = outletName + ':';\n            let part = _.find(parts, (p)=> (p.startsWith(s)));\n            if (part) {\n                return part.substr(s.length)\n            }\n        }\n        return '';\n    };\n\n    let initialLocation = _.clone(baseHistory.location);\n    initialLocation.pathname = extractPath(initialLocation.pathname);\n\n    let listeners = [];\n\n    const history = {\n        length: baseHistory.length,\n        action: baseHistory.action,\n        location: initialLocation,\n        createHref: (location) => {\n            return baseHistory.createHref({pathname:getPath(location.pathname)});\n        },\n        push: (path, state) => {\n            return baseHistory.push(getPath(path),getState(state));\n        },\n        replace: (path, state) => {\n            baseHistory.replace(getPath(path),getState(state));\n        },\n        go: (n) => {\n            baseHistory.go(n)\n        },\n        goBack: () => {\n            baseHistory.goBack()\n        },\n        goForward: () => {\n            baseHistory.goForward()\n        },\n        block:(prompt) => {\n            return baseHistory.block(prompt)\n        },\n        listen: (listener) => {\n            listeners.push(listener);\n            return () => {\n                _.pull(listeners, listener);\n            }\n        },\n        dispose: () => {\n            unlisten();\n        }\n    };\n\n    const unlisten = baseHistory.listen( (event) => {\n        let path = extractPath(event.pathname);\n        let state;\n        if (event.state && event.state['router_' + outletName]) {\n            state = event.state['router_' + outletName];\n        }\n        if (history.location.pathname !== path || history.location.state !== state) {\n            Object.assign(history.location, event);\n            history.location.pathname = path;\n            history.location.state = state;\n            _.each(listeners, (listener) => listener.call(this,history.location))\n        }\n    });\n\n    // unlisten when not used anymore !\n\n    return history\n}\n\nexport { createOutletHistory }","import React from 'react';\n\nimport {createHashHistory} from \"history\";\nimport {createOutletHistory} from \"./createOutletHistory\"\nimport {Router} from 'react-router'\n\nclass OutletRouter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let baseHistory = createHashHistory();\n        this.outletHistory = createOutletHistory(baseHistory, props.outlet);\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentWillUnmount() {\n        this.outletHistory.dispose();\n    }\n\n    render() {\n        return (<Router history={this.outletHistory}>{this.props.children}</Router>)\n    }\n}\n\nexport { OutletRouter };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Component } from \"react\";\nimport {Snackbar} from \"material-ui\";\n\nclass NotificationProvider extends Component {\n    constructor(props) {\n        super(props);\n\n        let {notificationContext} = this.props;\n\n        this.state = {\n            notification: {\n                message: \"\",\n                open: false\n            }\n        };\n\n        notificationContext.notify = (message) => {\n            this.setState({\n                notification: {\n                    message: message,\n                    open:true\n                }\n            });\n        };\n\n        notificationContext.closeNotification = () => {\n            this.setState({\n                notification: {\n                    message: '',\n                    open: false\n                }\n            });\n        };\n    }\n\n    getChildContext() {\n        return {\n            notificationContext: this.props.notificationContext\n        };\n    }\n\n    render() {\n        // TODO make it configurable\n        return <div>\n            {this.props.children}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                autoHideDuration={5000}\n                onClose={this.props.notificationContext.closeNotification}\n                open={this.state.notification.open}\n                SnackbarContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.notification.message}</span>}\n            />\n        </div>;\n    }\n}\n\nNotificationProvider.propTypes = {\n    notificationContext: PropTypes.object.isRequired\n};\n\nNotificationProvider.childContextTypes = {\n    notificationContext: PropTypes.object.isRequired\n};\n\nexport {NotificationProvider}","import React from 'react';\nimport {MuiThemeProvider} from 'material-ui';\nimport {createGenerateClassName} from 'material-ui/styles/index';\nimport {getI18n} from \"../i18n/getI18n\";\nimport {store} from '../reduxStore';\nimport {theme} from '../theme'\nimport {client} from '@jahia/apollo-dx';\nimport {ApolloProvider} from 'react-apollo';\nimport {Provider} from 'react-redux'\nimport {I18nextProvider} from 'react-i18next'\nimport {HashRouter} from 'react-router-dom'\nimport {OutletRouter} from '../router'\nimport PropTypes from 'prop-types';\nimport {JssProvider, SheetsRegistry} from 'react-jss';\nimport {NotificationProvider} from \"../notification/NotificationProvider\";\n\nclass DxContextProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        let {dxContext, children, i18n, apollo, redux, mui, router, apolloClient} = this.props;\n        let state = {};\n        if (mui) {\n            if (typeof mui === 'object') {\n                state.currentTheme = mui;\n            } else {\n                state.currentTheme = theme;\n            }\n            dxContext.setTheme = (theme) => {\n                // theTheme = _.merge({}, theme, this.state.theme);\n                this.setState({\n                    currentTheme: theme\n                });\n            };\n        }\n\n        if (dxContext.apolloClient) {\n            state.apolloClient = dxContext.apolloClient;\n        } else if (apolloClient) {\n            state.apolloClient = apolloClient;\n        } else if (apollo) {\n            let options = {contextPath:dxContext.contextPath};\n            if (typeof apollo === 'object') {\n                Object.assign(options, apollo)\n            }\n            state.apolloClient = client(options);\n        }\n\n        this.state = state;\n    }\n\n    getChildContext() {\n        return {dxContext: this.props.dxContext};\n    }\n\n    render() {\n        let {dxContext, children, i18n, apollo, redux, mui, router} = this.props;\n        let {currentTheme, apolloClient} = this.state;\n\n        let Component = React.Children.only(children);\n        if (i18n) {\n            let options = {currentLanguage:dxContext.uilang, contextPath:dxContext.contextPath};\n            if (typeof i18n === 'object') {\n                Object.assign(options, i18n)\n            }\n            Component = React.createElement(I18nextProvider, {i18n:getI18n(options)}, Component);\n        }\n        if (router) {\n            let router = HashRouter;\n            let options = {};\n            if (typeof router === 'object') {\n                if (router.type === 'outlet') {\n                    router = OutletRouter;\n                    options.outlet = router.outlet;\n                }\n            }\n            Component = React.createElement(HashRouter, options, Component);\n        }\n        if (apolloClient) {\n            Component = React.createElement(ApolloProvider, {client:apolloClient}, Component);\n        }\n        if (redux) {\n            Component = React.createElement(Provider, {store:store}, Component);\n        }\n\n        if (currentTheme) {\n            let generateClassName = dxContext.generateClassName ? dxContext.generateClassName : createGenerateClassName();\n            let sheetsRegistry = dxContext.sheetRegistry ? dxContext.sheetRegistry : new SheetsRegistry();\n            Component = React.createElement(JssProvider, {registry: sheetsRegistry,  generateClassName:generateClassName}, React.createElement(MuiThemeProvider, {theme: currentTheme, sheetsManager:new Map()}, Component));\n            // } else {\n            //     Component = React.createElement(MuiThemeProvider, {theme: currentTheme}, Component);\n            // }\n\n            // add notification\n            Component = React.createElement(NotificationProvider, {notificationContext:{}}, Component);\n        }\n\n        return Component;\n    }\n}\n\nDxContextProvider.childContextTypes = {\n    dxContext: PropTypes.object\n};\n\nexport {DxContextProvider}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction withDxContext() {\n    return (WrappedComponent) => {\n        let Component = class extends React.Component {\n            render() {\n                return (<WrappedComponent dxContext={this.context.dxContext} {...this.props} />)\n            }\n        }\n\n        Component.contextTypes = {\n            dxContext: PropTypes.object\n        };\n\n        return Component\n    }\n}\n\nexport { withDxContext }","import React from 'react';\nimport {Button, Menu, MenuItem} from 'material-ui';\nimport {translate} from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nclass LanguageSwitcher extends React.Component {\n\n    constructor(props,context) {\n        super(props,context);\n        this.state = {\n            anchorEl: null,\n        };\n    }\n\n    handleClick(event) {\n        this.setState({anchorEl: event.target});\n    }\n\n    handleClose(lang) {\n        this.setState({anchorEl: null});\n        if (lang) {\n            this.context.i18n.changeLanguage(lang);\n        }\n    };\n\n    render() {\n        let availableLocales = ['fr', 'en'];\n\n        return (<div>\n            <Button onClick={this.handleClick.bind(this)}\n            >{this.props.t('label.languages')}</Button>\n            <Menu open={Boolean(this.state.anchorEl)} onClose={this.handleClose.bind(this, null)}\n                  anchorEl={this.state.anchorEl}>\n                {availableLocales.map((locale) => (\n                    <MenuItem onClick={this.handleClose.bind(this, locale)} key={locale}\n                              value={locale}>{locale}</MenuItem>))}\n            </Menu>\n        </div>);\n    }\n}\n\nLanguageSwitcher.contextTypes = {\n    i18n: PropTypes.object\n};\n\nLanguageSwitcher = translate('react-dxcomponents')(LanguageSwitcher);\n\n\nexport {LanguageSwitcher}\n","import React from 'react';\nimport {AppBar, Toolbar, Typography, withStyles} from 'material-ui';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.global\n    },\n    main: {\n        minHeight: 'calc(100% - 96px)',\n        marginTop: 64,\n        padding: 1\n    },\n    footer: {\n        fontSize: '14px',\n        fontFamily: theme.typography.fontFamily,\n        fontWeight: 300,\n        padding: \"8px\",\n        textAlign: \"center\",\n        color: theme.palette.text.secondary\n    },\n    appBar: {\n        transition: \"all 200ms ease-in-out\"\n    }\n});\n\n\nclass SettingsLayout extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let { classes, appBar, children, footer, appBarStyle } = this.props;\n        return (\n            <section className={classes.root} >\n                <AppBar position=\"fixed\" classes={{root:classes.appBar}} style={appBarStyle}>\n                    {appBar}\n                </AppBar>\n                <section className={classes.main}>\n                    {children}\n                </section>\n                <footer className={classes.footer}>\n                    {footer}\n                </footer>\n            </section>\n        );\n    }\n}\n\n\nSettingsLayout.propTypes = {\n    appBar: PropTypes.element,\n    footer: PropTypes.string\n};\n\nSettingsLayout = withStyles(styles)(SettingsLayout);\n\nexport {SettingsLayout};","import React from 'react';\nimport {Input, InputAdornment, withStyles, Icon, IconButton} from 'material-ui';\nimport {Search, Close} from 'material-ui-icons';\nimport {translate} from 'react-i18next';\n\nconst styles = theme => ({\n    root: {\n        margin: '0',\n        color : 'inherit',\n        backgroundColor : theme.palette.primary.light,\n        width: '720px',\n        height: '44px',\n        lineHeight: '40px',\n        borderRadius: '3px',\n        fontWeight: '200'\n    },\n    rootFocus: {\n        margin: '0',\n        color: theme.palette.text.secondary,\n        backgroundColor : '#fff',\n        width: '720px',\n        height: '44px',\n        lineHeight: '40px',\n        borderRadius: '3px',\n        fontWeight: '100',\n        boxShadow: \"0 1px 8px 0 rgba(0, 0, 0, 0.4)\",\n        // '& $input': {\n        //     width: '300px'\n        // }\n    },\n    input: {\n        transitionProperty: 'width',\n        transitionDuration: '300ms',\n        transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\n        transitionDelay: '0ms',\n\n    },\n    searchIcon: {\n        'marginTop': 'auto',\n        'marginBottom': 'auto',\n        'paddingLeft': '14px',\n        'opacity': '0.87'\n    },\n    hidden: {\n        opacity: 0,\n        marginTop: 'auto',\n        marginBottom: 'auto',\n        paddingRight: '14px'\n    },\n    closeIcon: {\n        marginTop: 'auto',\n        marginBottom: 'auto',\n        paddingRight: '14px',\n        opacity: 0.87\n    }\n});\n\nclass SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.state = {\n            focus: false\n        }\n    }\n\n    handleChange(event) {\n        // Let the handler deal with the change only when the user has paused changing the filter text for a second.\n        event.persist();\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        this.timeout = setTimeout(function() {\n            this.props.onChangeFilter(event.target.value)\n        }.bind(this), 1000);\n    }\n\n    onClear() {\n        this.inputSearchBar.value = '';\n        this.props.onChangeFilter('');\n    }\n\n    onFocus() {\n        this.setState({\n            focus: true\n        });\n        this.props.onFocus();\n    }\n\n    onBlur() {\n        this.setState({\n            focus: false\n        });\n        this.props.onBlur();\n    }\n\n    render() {\n\n        const { classes,t, placeholderLabel } = this.props;\n\n        return (\n            <Input classes={{root: (this.state.focus ? classes.rootFocus : classes.root), input: classes.input}}\n                   onChange={this.handleChange}\n                   onBlur={this.onBlur}\n                   onFocus={this.onFocus}\n                   disableUnderline={true}\n                   type=\"text\"\n                   inputRef={(input) => {this.inputSearchBar = input;}}\n                   placeholder={placeholderLabel || t('label.searchPlaceholder')}\n                   startAdornment={<InputAdornment classes={{root: classes.searchIcon}} position=\"start\"><Search/></InputAdornment>}\n                   endAdornment={<InputAdornment position=\"end\"><IconButton classes={{root: (this.state.focus ? classes.closeIcon : classes.hidden)}}\n                        onClick={this.onClear}>\n                       <Icon><Close/></Icon>\n                   </IconButton></InputAdornment>}\n                   style={this.props.style}>\n            </Input>\n        )\n    }\n}\n\nSearchBar = withStyles(styles)(translate('react-dxcomponents')(SearchBar));\n\nexport {SearchBar};","import React from 'react';\nimport {graphql} from 'react-apollo';\nimport gql from \"graphql-tag\";\nimport * as _ from \"lodash\";\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\n\nfunction withNodeFromPath(fragments) {\n    return (ViewComponent) => {\n        // GraphQL maps\n        let mapResultsToProps = ({data, ownProps}) => {\n            let node;\n\n            if (data.jcr && data.jcr.node) {\n                node = data.jcr.node;\n            }\n\n            return {\n                ...ownProps,\n                node: node,\n            };\n        };\n\n        let mapPropsToOptions = (props) => {\n            let vars = {\n                path: props.path,\n                workspace: props.workspace ? props.workspace : 'EDIT'\n            };\n            if (props.queryVariables) {\n                _.assign(vars, props.queryVariables);\n            }\n\n            return {\n                variables: vars,\n                skip: !props.path\n            }\n        };\n\n        let query = gql`\n            query NodeQuery($path:String!, $workspace:Workspace!) {\n                jcr(workspace:$workspace) {\n                    workspace\n                    node:nodeByPath(path: $path) {\n                        workspace\n                        path\n                        uuid\n                        ... node\n                    }\n                }\n            }`;\n\n        replaceFragmentsInDocument(query, fragments);\n\n        return graphql(query, {\n            props: mapResultsToProps,\n            options: mapPropsToOptions\n        })(ViewComponent);\n    }\n}\n\nexport {withNodeFromPath};\n","import React from 'react';\nimport {graphql} from 'react-apollo';\nimport gql from \"graphql-tag\";\nimport * as _ from \"lodash\";\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\n\nfunction withNodesFromPath(fragments) {\n    return (ViewComponent) => {\n        // GraphQL maps\n        let mapResultsToProps = ({data, ownProps}) => {\n            let nodes = [];\n\n            let jcr = data.jcr;\n\n            if (jcr) {\n                if (jcr.node) {\n                    nodes = jcr.node.children.nodes;\n                }\n            }\n\n            return {\n                ...ownProps,\n                nodes: nodes,\n            };\n        };\n\n        let mapPropsToOptions = (props) => {\n            let vars = {\n                path: props.path,\n                types: props.types,\n            };\n            if (props.queryVariables) {\n                _.assign(vars, props.queryVariables);\n            }\n\n            return {\n                variables: vars,\n                skip: !props.path\n            }\n        };\n\n        let query = gql`\n            query NodesQuery($path:String!, $types:[String]!) {\n                jcr {\n                    node:nodeByPath(path: $path) {\n                        path\n                        uuid\n                        name\n                        children(typesFilter:{types:$types}) {\n                            nodes {\n                                path\n                                uuid\n                                name\n                                ... node\n                            }\n                        }\n                    }\n                }\n            }`;\n\n        replaceFragmentsInDocument(query, fragments);\n\n        return graphql(query, {\n            props: mapResultsToProps,\n            options: mapPropsToOptions\n        })(ViewComponent);\n    }\n}\n\nexport {withNodesFromPath};\n","import React from 'react';\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\nimport {connect} from 'react-redux'\n\nfunction withPathFromSelection(reduxStoreId) {\n    return (WrappedComponent) => {\n        return connect(\n            (state, ownProps) => ({\n                ...ownProps,\n                path: (state[\"selectedPaths_\" + reduxStoreId] && state[\"selectedPaths_\" + reduxStoreId].length === 1) ? state[\"selectedPaths_\" + reduxStoreId][0] : null,\n            }),\n            () => ({}))(WrappedComponent);\n    }\n}\n\nexport { withPathFromSelection }","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction withNotifications() {\n    return (WrappedComponent) => {\n        let Component = class extends React.Component {\n            render() {\n                return (<WrappedComponent notificationContext={this.context.notificationContext} {...this.props} />)\n            }\n        };\n\n        Component.contextTypes = {\n            notificationContext: PropTypes.object\n        };\n\n        return Component\n    }\n}\n\nexport { withNotifications }","import React from 'react';\nimport {\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    SvgIcon,\n    withStyles,\n    withTheme\n} from 'material-ui';\nimport {ExpandLess, ExpandMore} from 'material-ui-icons'\nimport PropTypes from 'prop-types';\nimport {fade} from 'material-ui/styles/colorManipulator'\n\n\nlet styles = (theme) => ({\n    root: {\n        position:\"relative\"\n    },\n    loading: {\n        opacity:0.8\n    },\n    padding: {\n        paddingTop:0,\n        paddingBottom:0\n    },\n    selected: {\n        backgroundColor: theme.palette.secondary.light,\n        '&:hover': {\n            backgroundColor: fade(theme.palette.secondary.light, 0.7)\n        }\n    },\n    selectedText: {\n        color: theme.palette.secondary.contrastText\n    },\n    loadingContainer: {\n        position:\"absolute\",\n        width:\"100%\",\n        height:\"100%\",\n        zIndex:999\n    }\n});\n\nlet PickerViewMaterial = function (props) {\n    let {theme, classes, pickerEntries, onOpenItem, onSelectItem, textRenderer, iconRenderer, loading} = props;\n    return (<div className={classes.root}>\n        { loading && <div className={classes.loadingContainer} />}\n        <List classes={{root:loading ? (classes.root + ' ' + classes.loading) : classes.root, padding:classes.padding}}>\n            {pickerEntries.map((entry) =>\n                (<ListItem button\n                           onClick={() => entry.selectable ? onSelectItem(entry.path, !entry.selected) : onOpenItem(entry.path, !entry.open)}\n                           key={entry.path}\n                           divider={true}\n                           classes={entry.selected ? {root:classes.selected} : {} }\n                    >\n                        <ListItemIcon classes={entry.selected ? {root:classes.selectedText} : {}}>\n                            {entry.openable && entry.hasChildren ? (\n                                <IconButton onClick={(event) => {onOpenItem(entry.path, !entry.open); event.stopPropagation()}}>{entry.open ?\n                                    <ExpandLess/> : <ExpandMore/>}</IconButton>) : <ExpandMore style={{opacity:0}}/>}\n                        </ListItemIcon>\n\n                        <ListItemIcon classes={entry.selected ? {root:classes.selectedText} : {}}\n                                      style={{paddingLeft: entry.depth * theme.spacing.unit}}>\n                            { iconRenderer && iconRenderer.call(this,entry) }\n                        </ListItemIcon>\n\n                        <ListItemText classes={entry.selected ? {primary:classes.selectedText} : {}} inset\n                                      primary={textRenderer ? textRenderer.call(this, entry) : entry.name} />\n                    </ListItem>\n                )\n            )}\n        </List>\n    </div>)\n};\n\nPickerViewMaterial.propTypes = {\n    pickerEntries: PropTypes.array.isRequired,\n    onSelectItem: PropTypes.func,\n    onOpenItem: PropTypes.func,\n    textRenderer: PropTypes.func\n};\n\nPickerViewMaterial = withTheme()(withStyles(styles)(PickerViewMaterial));\n\nexport {PickerViewMaterial};","import React from 'react';\nimport {IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, withTheme} from 'material-ui';\nimport {ExpandLess, ExpandMore, CheckBoxOutlineBlank, CheckBox} from 'material-ui-icons'\nimport PropTypes from 'prop-types';\n\nlet PickerViewMaterialMultiple = function (props) {\n    return (<List>\n        {props.pickerEntries.map((entry) =>\n            (<ListItem button\n                       onClick={() => entry.selectable ? props.onSelectItem(entry.path, !entry.selected, true) : props.onOpenItem(entry.path, !entry.open)}\n                       key={entry.path}\n                >\n                    <ListItemIcon style={entry.selectable ? {} : {opacity: 0}}>{entry.selected ? <CheckBox/> :\n                        <CheckBoxOutlineBlank/>}</ListItemIcon>\n                    <ListItemText style={{paddingLeft: entry.depth * props.theme.spacing.unit}} inset\n                                  primary={props['textRenderer'] ? props['textRenderer'].call(this, entry) : entry.name} />\n                    <ListItemSecondaryAction>\n                        {entry.openable && entry.hasChildren ? (\n                            <IconButton onClick={() => props.onOpenItem(entry.path, !entry.open)}>{entry.open ?\n                                <ExpandLess/> : <ExpandMore/>}</IconButton>) : null}\n                    </ListItemSecondaryAction>\n                </ListItem>\n            )\n        )}\n    </List>)\n};\n\nPickerViewMaterialMultiple.propTypes = {\n    pickerEntries: PropTypes.array.isRequired,\n    onSelectItem:  PropTypes.func,\n    onOpenItem: PropTypes.func,\n    textRenderer: PropTypes.func,\n};\n\nPickerViewMaterialMultiple = withTheme()(PickerViewMaterialMultiple);\n\nexport { PickerViewMaterialMultiple };","import React from 'react';\nimport {Query} from 'react-apollo';\nimport gql from \"graphql-tag\";\nimport * as _ from \"lodash\";\nimport {replaceFragmentsInDocument} from \"@jahia/apollo-dx\";\nimport PropTypes from 'prop-types';\n\nclass Picker extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let {\n            fragments, render, rootPaths, queryVariables, hideRoot,\n            openableTypes, selectableTypes,\n            openPaths, onOpenItem,\n            selectedPaths, onSelectItem,\n            defaultSelectedPaths, onSelectionChange,\n            defaultOpenPaths,\n            onLoading,\n            ...otherProps\n        } = props;\n\n        this.isOpenControlled = openPaths != null;\n        this.isSelectionControlled = selectedPaths != null;\n\n        this.query = gql`\n            query PickerQuery($rootPaths:[String!]!, $selectable:[String]!, $openable:[String]!, $openPaths:[String!]!, $types:[String]!) {\n                jcr {\n                    rootNodes:nodesByPath(paths: $rootPaths) {\n                        path\n                        uuid\n                        name\n                        children(typesFilter:{types:$types}, limit:1) {\n                            pageInfo {\n                                totalCount\n                            }\n                        }\n                        selectable : isNodeType(type: {types:$selectable})\n                        openable : isNodeType(type: {types:$openable})\n                        ... node\n                    },\n                    openNodes:nodesByPath(paths: $openPaths) {\n                        path\n                        uuid\n                        children(typesFilter:{types:$types}) {\n                            nodes {\n                                path\n                                uuid\n                                name\n                                children(typesFilter:{types:$types}, limit:1) {\n                                    pageInfo {\n                                        totalCount\n                                    }\n                                }\n                                selectable : isNodeType(type: {types:$selectable})\n                                openable : isNodeType(type: {types:$openable})\n                                ... node\n                            }\n                        }\n                    }\n                }\n            }`;\n\n\n        replaceFragmentsInDocument(this.query, fragments);\n\n        let eventsHandlers = {};\n\n        let state = {\n            renderProps: otherProps,\n            eventsHandlers: eventsHandlers\n        };\n\n\n        if (!this.isOpenControlled) {\n            state.openPaths = defaultOpenPaths ? _.clone(defaultOpenPaths) : [];\n            eventsHandlers.onOpenItem = (path, open) => {\n                this.setState((prevState) => ({\n                    openPaths: open ?\n                        [...prevState.openPaths, path] :\n                        _.filter(prevState.openPaths, (thispath) => thispath !== path)\n                }));\n            };\n        } else {\n            eventsHandlers.onOpenItem = onOpenItem;\n        }\n\n        if (!this.isSelectionControlled) {\n            state.selectedPaths = defaultSelectedPaths ? _.clone(defaultSelectedPaths) : [];\n            eventsHandlers.onSelectItem = (path, selected, multiple) => {\n                this.setState((prevState) => {\n                    let newSelectedPaths = selected ?\n                        [...(multiple ? prevState.selectedPaths : []), path] :\n                        _.filter(prevState.selectedPaths, (thispath) => thispath !== path);\n                    onSelectionChange(newSelectedPaths);\n                    return {\n                        selectedPaths: newSelectedPaths\n                    };\n                });\n            };\n        } else {\n            eventsHandlers.onSelectItem = onSelectItem;\n        }\n\n        this.state = state;\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        let {\n            fragments, render, rootPaths, queryVariables, hideRoot,\n            openableTypes, selectableTypes,\n            openPaths, onOpenItem,\n            selectedPaths, onSelectItem,\n            defaultSelectedPaths, onSelectionChange,\n            defaultOpenPaths,\n            onLoading,\n            ...otherProps\n        } = nextProps;\n\n        if (!_.isEqual(_.omit(otherProps, _.functions(otherProps)), _.omit(prevState.renderProps, _.functions(prevState.renderProps)))) {\n            return {\n                renderProps: otherProps\n            }\n        }\n\n        return null;\n    }\n\n    getVariables(selectedPaths, openPaths) {\n        let {rootPaths, openableTypes, selectableTypes, queryVariables} = this.props;\n\n        let vars = {\n            rootPaths: rootPaths,\n            types: _.union(openableTypes, selectableTypes),\n            selectable: selectableTypes,\n            openable: openableTypes,\n            openPaths: openPaths,\n        };\n\n        if (queryVariables) {\n            _.assign(vars, queryVariables);\n        }\n\n        return vars;\n    }\n\n    getPickerEntries(data, selectedPaths, openPaths) {\n        let pickerEntries = [];\n        let nodesById = {};\n        let jcr = data.jcr;\n\n        let addNode = function (node, depth, index) {\n            let selected = false;\n            if (node.selectable) {\n                selected = _.indexOf(selectedPaths, node.path) !== -1\n            }\n            let pickerNode = {\n                name: node.name,\n                path: node.path,\n                open: node.openable && _.indexOf(openPaths, node.path) !== -1,\n                selected: selected,\n                openable: node.openable,\n                selectable: node.selectable,\n                depth: depth,\n                prefix: _.repeat(\"&nbsp;\", depth * 3),\n                node: node,\n                hidden: false,\n                hasChildren: node.children.pageInfo.totalCount > 0\n            };\n            pickerEntries.splice(index, 0, pickerNode);\n            nodesById[node.uuid] = pickerNode;\n            return pickerNode;\n        };\n\n        if (jcr) {\n            if (jcr.rootNodes) {\n                _.forEach(jcr.rootNodes, rootNode => {\n                    let root = addNode(rootNode, 0, 0);\n                    root.hidden = this.props.hideRoot;\n                });\n            }\n            if (jcr.openNodes) {\n                _.sortBy(jcr.openNodes, ['path']).forEach((node) => {\n                    let parent = nodesById[node.uuid];\n                    if (parent) {\n                        let parentIndex = _.indexOf(pickerEntries, parent);\n                        _.forEachRight(node.children.nodes, (child) => {\n                            addNode(child, parent.depth + 1, parentIndex + 1)\n                        })\n                    }\n                });\n            }\n        }\n\n        // Nodes loaded, fill selection list\n        let selectedNodes = _.filter(pickerEntries, (node) => {\n            return node.selected\n        }).map((node) => {\n            return node.node\n        });\n\n        selectedPaths = _.map(selectedNodes, \"path\");\n        pickerEntries = _.filter(pickerEntries, pickerNode => {\n            return !pickerNode.hidden;\n        });\n\n        return pickerEntries;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        let {\n            render:nextRender, rootPaths:nextRootPaths, hideRoot:nextHideRoot,\n            openPaths:nextOpenPaths, selectedPaths:nextSelectedPaths, defaultSelectedPaths:nextDefaultSelectedPaths, defaultOpenPaths:nextDefaultOpenPaths,\n            ...nextPropsToCompare\n        } = nextProps;\n\n        let {\n            render, rootPaths, hideRoot,\n            openPaths, selectedPaths, defaultSelectedPaths, defaultOpenPaths,\n            ...previousPropsToCompare\n        } = this.props;\n\n        nextPropsToCompare = _.omit(nextPropsToCompare, _.functions(nextPropsToCompare));\n        previousPropsToCompare = _.omit(previousPropsToCompare, _.functions(previousPropsToCompare));\n\n        let changed = (this.isSelectionControlled ? !_.isEqual(selectedPaths, nextSelectedPaths) : !_.isEqual(this.state.selectedPaths,nextState.selectedPaths))\n            || (this.isOpenControlled ? !_.isEqual(openPaths, nextOpenPaths) : !_.isEqual(this.state.openPaths,nextState.openPaths))\n            || !(_.isEqual(nextPropsToCompare, previousPropsToCompare));\n\n        return changed;\n        // return true;\n    }\n\n    render() {\n        let selectedPaths = this.isSelectionControlled ? this.props.selectedPaths : this.state.selectedPaths;\n        let openPaths = this.isOpenControlled ? this.props.openPaths : this.state.openPaths;\n        let {rootPaths, openableTypes, selectableTypes, queryVariables} = this.props;\n\n        openPaths = _.clone(openPaths);\n        let fullyOpenPath = (path) => {\n            let rootFound = false;\n            _.tail(_.split(path, \"/\")).reduce((acc, it) => {\n                if (!rootFound) {\n                    _.forEach(rootPaths, rootPath => {\n                        rootFound = rootFound || _.startsWith(acc, rootPath);\n                    })\n                }\n                if (rootFound && _.indexOf(openPaths, acc) === -1) {\n                    openPaths.push(acc);\n                }\n                return acc + \"/\" + it\n            }, \"\");\n        };\n\n        _.each(selectedPaths, path => fullyOpenPath(path));\n\n        let vars = this.getVariables(selectedPaths, openPaths);\n\n        return <Query query={this.query} variables={vars} fetchPolicy={\"cache-first\"} >\n            {\n                ({error, loading, data}) => {\n                    let Render = this.props.render;\n                    if (this.props.onLoading) {\n                        this.props.onLoading(loading);\n                    }\n                    if (loading) {\n                        if (this.previousEntries) {\n                            return <Render {...this.state.eventsHandlers} {...this.state.renderProps}\n                                           pickerEntries={this.previousEntries} loading={true}/>\n                        } else {\n                            return <Render {...this.state.eventsHandlers} {...this.state.renderProps}\n                                           pickerEntries={[]} loading={true}/>\n                        }\n                    }\n                    if (error) return `Error! ${error.message}`;\n                    let pickerEntries = this.getPickerEntries(data, selectedPaths, openPaths);\n                    this.previousEntries = pickerEntries;\n                    return <Render {...this.state.eventsHandlers} {...this.state.renderProps}\n                                   pickerEntries={pickerEntries} loading={false || this.props.loading}/>\n                }\n            }\n        </Query>\n    }\n\n}\n\nPicker.propTypes = {\n    /**\n     * List of root paths for the picker\n     */\n    rootPaths: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    /**\n     * List of folder paths that are open by default (uncontrolled mode)\n     */\n    defaultOpenPaths: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * List of node types that can be \"opened\" (folders)\n     */\n    openableTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    /**\n     * List of open folders in controlled mode\n     */\n    openPaths: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * List of node types that can be \"selected\" (items)\n     */\n    selectableTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    /**\n     * Preselected items path (uncontrolled mode)\n     */\n    defaultSelectedPaths: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * List of selected path in controlled mode\n     */\n    selectedPaths: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * Callback when the selection has changed\n     */\n    onSelectionChange: PropTypes.func,\n\n    /**\n     * Component to use to do the full rendering of the tree. Should accept : pickerEntries,onSelectItem,onOpenItem . Other properties are passed through.\n     */\n    render: PropTypes.func,\n\n    /**\n     * Optional set of fragments to add to the graphQL query. Can be a string that identify a predefinedFragment or a fragment definition\n     */\n    fragments: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n            applyFor: PropTypes.string.isRequired,\n            variables: PropTypes.string,\n            gql: PropTypes.object.isRequired\n        })\n    ])),\n\n    /**\n     * Optional set of variable to pass to the graphQL query, in order to fulfill fragments needs\n     */\n    queryVariables: PropTypes.object\n\n};\n\n\nexport {Picker}"],"names":["getI18n","options","use","XHR","init","currentLanguage","undefined","contextPath","i18n","reducers","store","debugTool","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","state","action","_","value","key","resetStateReducer","type","theme","createMuiTheme","grey","blueGrey","lightBlue","red","deepOrange","green","darkTheme","purple","ThemeTester","props","switch","bind","themes","setState","previous","dxContext","setTheme","checked","React","Switch","Component","withDxContext","createOutletHistory","baseHistory","outletName","getPath","path","parts","base","location","pathname","newPath","indexOf","substr","split","p","startsWith","push","getState","newState","extractPath","s","part","length","initialLocation","listeners","history","createHref","replace","n","go","goBack","goForward","prompt","block","listener","unlisten","listen","event","assign","call","OutletRouter","createHashHistory","outletHistory","outlet","dispose","children","NotificationProvider","notificationContext","notify","message","closeNotification","Snackbar","notification","open","propTypes","PropTypes","object","isRequired","childContextTypes","DxContextProvider","apollo","redux","mui","router","apolloClient","currentTheme","client","Children","only","uilang","createElement","I18nextProvider","HashRouter","ApolloProvider","Provider","generateClassName","createGenerateClassName","sheetsRegistry","sheetRegistry","SheetsRegistry","JssProvider","registry","MuiThemeProvider","sheetsManager","Map","WrappedComponent","context","contextTypes","LanguageSwitcher","anchorEl","target","lang","changeLanguage","availableLocales","handleClick","t","Boolean","handleClose","map","locale","translate","styles","palette","background","global","typography","fontFamily","text","secondary","SettingsLayout","classes","appBar","footer","appBarStyle","root","main","element","string","withStyles","primary","light","SearchBar","handleChange","onFocus","onBlur","onClear","persist","timeout","setTimeout","onChangeFilter","inputSearchBar","placeholderLabel","Input","focus","rootFocus","input","searchIcon","Search","closeIcon","hidden","Close","style","withNodeFromPath","fragments","ViewComponent","mapResultsToProps","data","ownProps","node","jcr","mapPropsToOptions","vars","workspace","queryVariables","query","gql","graphql","withNodesFromPath","nodes","types","withPathFromSelection","reduxStoreId","connect","withNotifications","fade","contrastText","PickerViewMaterial","pickerEntries","onOpenItem","onSelectItem","textRenderer","iconRenderer","loading","loadingContainer","padding","entry","selectable","selected","selectedText","openable","hasChildren","stopPropagation","ExpandLess","ExpandMore","opacity","paddingLeft","depth","spacing","unit","ListItemText","name","array","func","withTheme","PickerViewMaterialMultiple","CheckBox","CheckBoxOutlineBlank","Picker","render","rootPaths","hideRoot","openableTypes","selectableTypes","openPaths","selectedPaths","defaultSelectedPaths","onSelectionChange","defaultOpenPaths","onLoading","otherProps","isOpenControlled","isSelectionControlled","eventsHandlers","prevState","thispath","multiple","newSelectedPaths","nodesById","addNode","index","pickerNode","pageInfo","totalCount","splice","uuid","rootNodes","rootNode","openNodes","forEach","parent","parentIndex","child","selectedNodes","nextProps","nextState","nextRender","nextRootPaths","nextHideRoot","nextOpenPaths","nextSelectedPaths","nextDefaultSelectedPaths","nextDefaultOpenPaths","nextPropsToCompare","previousPropsToCompare","changed","fullyOpenPath","rootFound","reduce","acc","it","rootPath","getVariables","error","Render","previousEntries","renderProps","getPickerEntries","arrayOf","oneOfType","shape"],"mappings":"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"}